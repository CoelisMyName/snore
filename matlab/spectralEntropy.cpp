#include "spectralEntropy.h"
#include "SnoringRecognition_data.h"
#include "log2.h"
#include "rt_nonfinite.h"
#include "coder_array.h"
#include "fftw3.h"
#include "mylock.h"
#include "rt_nonfinite.h"
#include <math.h>

namespace coder {
void b_spectralEntropy(const ::coder::array<double, 1U> &x,
                       ::coder::array<double, 1U> &entropy)
{
    static const double b_dv[480] = {
        4.2658287523589244E-5,  0.00017062587117649963, 0.00038388091544672154,
        0.00068238703195427908, 0.0010660932856602634,  0.0015349342035578251,
        0.0020888297858442928,  0.0027276855195715877,  0.0034513923947734892,
        0.00425982692306609,    0.0051528511587191628,  0.0061303127221942755,
        0.0071920448261457715,  0.00833786630388017,    0.0095675816402693847,
        0.0108809810051117,     0.012277840288936248,   0.013757921141243135,
        0.015320971011174189,   0.016966723190606381,   0.01869489685966097,
        0.0205051971346209,     0.022397315118247718,   0.024370927952489463,
        0.026425698873571213,   0.028561277269457896,   0.030777298739680659,
        0.033073385157515289,   0.035449144734503391,   0.037904172087304566,
        0.04043804830686798,    0.043050341029912342,   0.0457406045127014,
        0.048508379707102423,   0.051353194338915276,   0.0542745629884579,
        0.057271987173395045,   0.060344955433795866,   0.063492943419405923,
        0.066715413979118787,   0.070011817252631781,   0.073381590764270366,
        0.0768241595189651,     0.080338936100364966,   0.083925320771070067,
        0.0875827015749665,     0.0913104544416467,     0.09510794329289618,
        0.098974520151229761,   0.10290952525045816,    0.10691228714826551,
        0.11098212284078024,    0.11511833787911768,    0.11932022648787638,
        0.12358707168556671,    0.12791814540695168,    0.13231270862727879,
        0.13677001148838253,    0.14128929342663477,    0.14586978330272221,
        0.15051069953322843,    0.15521125022399757,    0.15997063330525807,
        0.16478803666848241,    0.16966263830495926,    0.17459360644605609,
        0.17958009970514582,    0.18462126722117594,    0.18971624880385285,
        0.19486417508041948,    0.20006416764399887,    0.20531533920347927,
        0.21061679373491593,    0.21596762663442209,    0.22136692487252435,
        0.22681376714995616,    0.23230722405486165,    0.23784635822138406,
        0.24343022448961205,    0.24905787006685437,    0.25472833469021849,
        0.26044065079046341,    0.26619384365709858,    0.271986931604702,
        0.27781892614042836,    0.2836888321326787,     0.289595647980903,
        0.29553836578650572,    0.30151597152482795,    0.30752744521817232,
        0.31357176110984569,    0.31964788783918746,    0.32575478861755347,
        0.33189142140522665,    0.33805673908922329,    0.34424968966196556,
        0.35046921640078921,    0.35671425804825435,    0.36298374899323244,
        0.36927661945273382,    0.37559179565444911,    0.38192820001996941,
        0.38828475134865759,    0.39466036500213691,    0.40105395308936553,
        0.4074644246522679,     0.41389068585188776,    0.4203316401550331,
        0.42678618852138162,    0.43325322959101331,    0.43973165987233848,
        0.44622037393039049,    0.45271826457544972,    0.45922422305196642,
        0.46573713922775134,    0.47225590178340093,    0.47877939840192579,
        0.48530651595854829,    0.49183614071063858,    0.49836715848775631,
        0.5048984548817651,     0.51142891543698665,    0.517957425840365,
        0.52448287211160471,    0.53100414079325253,    0.537520119140691,
        0.5440296953120084,     0.55053175855771719,    0.55702519941028328,
        0.56350890987343927,    0.56998178361124474,    0.576442716136863,
        0.5828906050010253,     0.58932434998014294,    0.59574285326404341,
        0.60214501964329237,    0.60852975669607312,    0.61489597497458992,
        0.62124258819096345,    0.62756851340258835,    0.6338726711969187,
        0.64015398587565109,    0.64641138563827516,    0.652643802764958,
        0.6588501737987329,     0.66502943972695927,    0.67118054616202683,
        0.67730244352126778,    0.68339408720605133,    0.689454437780026,
        0.695482461146483,      0.7014771287248065,     0.70743741762598367,
        0.71336231082714385,    0.719250797345096,      0.7251018724088365,
        0.7309145376309959,     0.73668780117819654,    0.74242067794029321,
        0.748112189698465,      0.75376136529213167,    0.75936724078466611,
        0.76492885962787427,    0.77044527282521313,    0.7759155390937218,
        0.78133872502463486,    0.78671390524265361,    0.79204016256384469,
        0.79731658815214335,    0.80254228167443031,    0.80771635145415832,
        0.81283791462350219,    0.81790609727400487,    0.82292003460569563,
        0.82787887107465274,    0.83278176053898911,    0.83762786640323084,
        0.84241636176106838,    0.84714642953645469,    0.85181726262302537,
        0.85642806402181682,    0.86097804697726221,    0.865466435111437,
        0.86989246255653474,    0.87425537408555043,    0.87855442524114613,
        0.88278888246268084,    0.88695802321137962,    0.89106113609362358,
        0.89509752098233641,    0.89906648913644938,    0.90296736331842387,
        0.90679947790981008,    0.910562179024824,      0.91425482462192109,
        0.91787678461335109,    0.921427440972671,      0.92490618784020184,
        0.92831243162640664,    0.93164559111317846,    0.93490509755301443,
        0.9380903947660626,     0.94120093923502579,    0.94423620019790255,
        0.94719565973855357,    0.9500788128750749,     0.95288516764596454,
        0.9556142451940679,     0.95826557984828575,    0.9608387192030341,
        0.96333322419543932,    0.96574866918025681,    0.96808464200249966,
        0.97034074406776694,    0.972516590410256,      0.97461180975845152,
        0.9766260445984758,     0.9785589512350934,     0.98041019985035571,
        0.98217947455988008,    0.98386647346674949,    0.985470908713026,
        0.98699250652886961,    0.98843100727925193,    0.98978616550825826,
        0.99105774998097129,    0.99224554372292673,    0.99334934405713682,
        0.99436896263867336,    0.99530422548680608,    0.99615497301468869,
        0.99692106005659076,    0.99760235589266721,    0.99819874427126321,
        0.99871012342875121,    0.99913640610689436,    0.99947751956773678,
        0.99973340560601409,    0.99990402055908523,    0.99998933531438361,
        0.99998933531438361,    0.99990402055908523,    0.99973340560601409,
        0.99947751956773678,    0.99913640610689436,    0.99871012342875121,
        0.99819874427126321,    0.99760235589266721,    0.99692106005659076,
        0.99615497301468869,    0.99530422548680608,    0.99436896263867336,
        0.99334934405713682,    0.99224554372292673,    0.99105774998097129,
        0.98978616550825826,    0.98843100727925193,    0.98699250652886961,
        0.985470908713026,      0.98386647346674949,    0.98217947455988008,
        0.98041019985035571,    0.9785589512350934,     0.9766260445984758,
        0.97461180975845152,    0.972516590410256,      0.97034074406776694,
        0.96808464200249966,    0.96574866918025681,    0.96333322419543932,
        0.9608387192030341,     0.95826557984828575,    0.9556142451940679,
        0.95288516764596454,    0.9500788128750749,     0.94719565973855357,
        0.94423620019790255,    0.94120093923502579,    0.9380903947660626,
        0.93490509755301443,    0.93164559111317846,    0.92831243162640664,
        0.92490618784020184,    0.921427440972671,      0.91787678461335109,
        0.91425482462192109,    0.910562179024824,      0.90679947790981008,
        0.90296736331842387,    0.89906648913644938,    0.89509752098233641,
        0.89106113609362358,    0.88695802321137962,    0.88278888246268084,
        0.87855442524114613,    0.87425537408555043,    0.86989246255653474,
        0.865466435111437,      0.86097804697726221,    0.85642806402181682,
        0.85181726262302537,    0.84714642953645469,    0.84241636176106838,
        0.83762786640323084,    0.83278176053898911,    0.82787887107465274,
        0.82292003460569563,    0.81790609727400487,    0.81283791462350219,
        0.80771635145415832,    0.80254228167443031,    0.79731658815214335,
        0.79204016256384469,    0.78671390524265361,    0.78133872502463486,
        0.7759155390937218,     0.77044527282521313,    0.76492885962787427,
        0.75936724078466611,    0.75376136529213167,    0.748112189698465,
        0.74242067794029321,    0.73668780117819654,    0.7309145376309959,
        0.7251018724088365,     0.719250797345096,      0.71336231082714385,
        0.70743741762598367,    0.7014771287248065,     0.695482461146483,
        0.689454437780026,      0.68339408720605133,    0.67730244352126778,
        0.67118054616202683,    0.66502943972695927,    0.6588501737987329,
        0.652643802764958,      0.64641138563827516,    0.64015398587565109,
        0.6338726711969187,     0.62756851340258835,    0.62124258819096345,
        0.61489597497458992,    0.60852975669607312,    0.60214501964329237,
        0.59574285326404341,    0.58932434998014294,    0.5828906050010253,
        0.576442716136863,      0.56998178361124474,    0.56350890987343927,
        0.55702519941028328,    0.55053175855771719,    0.5440296953120084,
        0.537520119140691,      0.53100414079325253,    0.52448287211160471,
        0.517957425840365,      0.51142891543698665,    0.5048984548817651,
        0.49836715848775631,    0.49183614071063858,    0.48530651595854829,
        0.47877939840192579,    0.47225590178340093,    0.46573713922775134,
        0.45922422305196642,    0.45271826457544972,    0.44622037393039049,
        0.43973165987233848,    0.43325322959101331,    0.42678618852138162,
        0.4203316401550331,     0.41389068585188776,    0.4074644246522679,
        0.40105395308936553,    0.39466036500213691,    0.38828475134865759,
        0.38192820001996941,    0.37559179565444911,    0.36927661945273382,
        0.36298374899323244,    0.35671425804825435,    0.35046921640078921,
        0.34424968966196556,    0.33805673908922329,    0.33189142140522665,
        0.32575478861755347,    0.31964788783918746,    0.31357176110984569,
        0.30752744521817232,    0.30151597152482795,    0.29553836578650572,
        0.289595647980903,      0.2836888321326787,     0.27781892614042836,
        0.271986931604702,      0.26619384365709858,    0.26044065079046341,
        0.25472833469021849,    0.24905787006685437,    0.24343022448961205,
        0.23784635822138406,    0.23230722405486165,    0.22681376714995616,
        0.22136692487252435,    0.21596762663442209,    0.21061679373491593,
        0.20531533920347927,    0.20006416764399887,    0.19486417508041948,
        0.18971624880385285,    0.18462126722117594,    0.17958009970514582,
        0.17459360644605609,    0.16966263830495926,    0.16478803666848241,
        0.15997063330525807,    0.15521125022399757,    0.15051069953322843,
        0.14586978330272221,    0.14128929342663477,    0.13677001148838253,
        0.13231270862727879,    0.12791814540695168,    0.12358707168556671,
        0.11932022648787638,    0.11511833787911768,    0.11098212284078024,
        0.10691228714826551,    0.10290952525045816,    0.098974520151229761,
        0.09510794329289618,    0.0913104544416467,     0.0875827015749665,
        0.083925320771070067,   0.080338936100364966,   0.0768241595189651,
        0.073381590764270366,   0.070011817252631781,   0.066715413979118787,
        0.063492943419405923,   0.060344955433795866,   0.057271987173395045,
        0.0542745629884579,     0.051353194338915276,   0.048508379707102423,
        0.0457406045127014,     0.043050341029912342,   0.04043804830686798,
        0.037904172087304566,   0.035449144734503391,   0.033073385157515289,
        0.030777298739680659,   0.028561277269457896,   0.026425698873571213,
        0.024370927952489463,   0.022397315118247718,   0.0205051971346209,
        0.01869489685966097,    0.016966723190606381,   0.015320971011174189,
        0.013757921141243135,   0.012277840288936248,   0.0108809810051117,
        0.0095675816402693847,  0.00833786630388017,    0.0071920448261457715,
        0.0061303127221942755,  0.0051528511587191628,  0.00425982692306609,
        0.0034513923947734892,  0.0027276855195715877,  0.0020888297858442928,
        0.0015349342035578251,  0.0010660932856602634,  0.00068238703195427908,
        0.00038388091544672154, 0.00017062587117649963, 4.2658287523589244E-5};
    array<creal_T, 2U> Y;
    array<creal_T, 2U> Yb;
    array<creal_T, 2U> c_y;
    array<creal_T, 2U> r;
    array<double, 2U> X;
    array<double, 2U> a;
    array<double, 2U> b_y;
    array<double, 2U> e;
    array<double, 2U> y;
    array<int, 2U> index_f2;
    array<int, 1U> r1;
    fftw_iodim howmany_iodims;
    fftw_iodim iodims;
    double Y_re;
    int acoef;
    int csz_idx_1;
    int i;
    int k;
    int xi;
    int xoffset;
    csz_idx_1 = static_cast<int>(
        floor((static_cast<double>(x.size(0)) - 480.0) / 240.0));
    y.set_size(480, csz_idx_1 + 1);
    xoffset = 480 * (csz_idx_1 + 1);
    for (i = 0; i < xoffset; i++) {
        y[i] = 0.0;
    }
    for (acoef = 0; acoef <= csz_idx_1; acoef++) {
        i = 240 * acoef;
        for (xi = 0; xi < 480; xi++) {
            y[xi + 480 * acoef] = x[xi + i];
        }
    }
    a.set_size(480, y.size(1));
    xoffset = 480 * y.size(1);
    for (i = 0; i < xoffset; i++) {
        a[i] = y[i];
    }
    csz_idx_1 = y.size(1);
    y.set_size(480, csz_idx_1);
    if (csz_idx_1 != 0) {
        acoef = (a.size(1) != 1);
        i = csz_idx_1 - 1;
        for (k = 0; k <= i; k++) {
            csz_idx_1 = acoef * k;
            for (xoffset = 0; xoffset < 480; xoffset++) {
                y[xoffset + 480 * k] =
                    a[xoffset + 480 * csz_idx_1] * b_dv[xoffset];
            }
        }
    }
    if (y.size(1) == 0) {
        Y.set_size(480, 0);
    } else {
        fftw_plan plan;
        iodims.n = 480;
        iodims.is = 1;
        iodims.os = 1;
        howmany_iodims.n = y.size(1);
        howmany_iodims.is = 480;
        howmany_iodims.os = 480;
        mylock();
        fftw_init_threads();
        fftw_plan_with_nthreads(8);
        myunlock();
        Y.set_size(480, y.size(1));
        mylock();
        plan = fftw_plan_guru_dft_r2c(1, &iodims, 1, &howmany_iodims,
                                      (double *)&y[0], (fftw_complex *)&Y[0],
                                      (unsigned int)FFTW_PRESERVE_INPUT |
                                          (unsigned int)FFTW_ESTIMATE);
        myunlock();
        fftw_execute(plan);
        mylock();
        fftw_destroy_plan(plan);
        myunlock();
        csz_idx_1 = y.size(1);
        index_f2.set_size(1, y.size(1));
        index_f2[0] = 1;
        acoef = 1;
        for (k = 2; k <= csz_idx_1; k++) {
            acoef++;
            index_f2[k - 1] = acoef;
        }
        acoef = 242;
        xoffset = index_f2.size(1);
        do {
            r1.set_size(index_f2.size(1));
            c_y.set_size(1, index_f2.size(1));
            for (i = 0; i < xoffset; i++) {
                xi = index_f2[i];
                r1[i] = xi - 1;
                c_y[i].re = Y[(480 * (xi - 1) - acoef) + 481].re;
                c_y[i].im = -Y[(480 * (xi - 1) - acoef) + 481].im;
            }
            csz_idx_1 = c_y.size(1);
            for (i = 0; i < csz_idx_1; i++) {
                Y[(acoef + 480 * r1[i]) - 1] = c_y[i];
            }
            acoef++;
        } while (!(acoef == 481));
    }
    xoffset = Y.size(1);
    Yb.set_size(241, Y.size(1));
    for (i = 0; i < xoffset; i++) {
        for (xi = 0; xi < 241; xi++) {
            double Y_im;
            double b_Y_re;
            Y_re = Y[xi + 480 * i].re;
            Y_im = -Y[xi + 480 * i].im;
            b_Y_re = Y[xi + 480 * i].re * Y_re - Y[xi + 480 * i].im * Y_im;
            Y_im = Y[xi + 480 * i].re * Y_im + Y[xi + 480 * i].im * Y_re;
            if (Y_im == 0.0) {
                Yb[xi + 241 * i].re = b_Y_re / 28920.124999999967;
                Yb[xi + 241 * i].im = 0.0;
            } else if (b_Y_re == 0.0) {
                Yb[xi + 241 * i].re = 0.0;
                Yb[xi + 241 * i].im = Y_im / 28920.124999999967;
            } else {
                Yb[xi + 241 * i].re = b_Y_re / 28920.124999999967;
                Yb[xi + 241 * i].im = Y_im / 28920.124999999967;
            }
        }
    }
    csz_idx_1 = Yb.size(1) - 1;
    r.set_size(1, Yb.size(1));
    for (i = 0; i <= csz_idx_1; i++) {
        r[i].re = 0.5 * Yb[241 * i].re;
        r[i].im = 0.5 * Yb[241 * i].im;
    }
    xoffset = r.size(1);
    for (i = 0; i < xoffset; i++) {
        Yb[241 * i] = r[i];
    }
    csz_idx_1 = Yb.size(1) - 1;
    r.set_size(1, Yb.size(1));
    for (i = 0; i <= csz_idx_1; i++) {
        r[i].re = 0.5 * Yb[241 * i + 240].re;
        r[i].im = 0.5 * Yb[241 * i + 240].im;
    }
    xoffset = r.size(1);
    for (i = 0; i < xoffset; i++) {
        Yb[241 * i + 240] = r[i];
    }
    X.set_size(241, Yb.size(1));
    xoffset = 241 * Yb.size(1);
    for (i = 0; i < xoffset; i++) {
        X[i] = Yb[i].re;
    }
    if (X.size(1) == 0) {
        e.set_size(1, 0);
    } else {
        csz_idx_1 = X.size(1);
        e.set_size(1, X.size(1));
        for (xi = 0; xi < csz_idx_1; xi++) {
            acoef = xi * 241;
            Y_re = X[acoef];
            for (k = 0; k < 240; k++) {
                Y_re += X[(acoef + k) + 1];
            }
            e[xi] = Y_re;
        }
    }
    b_y.set_size(241, e.size(1));
    csz_idx_1 = e.size(1);
    for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
        acoef = xoffset * 241;
        for (xi = 0; xi < 241; xi++) {
            b_y[acoef + xi] = e[xoffset];
        }
    }
    xoffset = 241 * X.size(1);
    X.set_size(241, X.size(1));
    for (i = 0; i < xoffset; i++) {
        X[i] = X[i] / b_y[i];
    }
    csz_idx_1 = 241 * X.size(1);
    b_y.set_size(241, X.size(1));
    for (k = 0; k < csz_idx_1; k++) {
        b_y[k] = internal::scalar::b_log2(X[k]);
    }
    xoffset = 241 * X.size(1);
    X.set_size(241, X.size(1));
    for (i = 0; i < xoffset; i++) {
        X[i] = X[i] * b_y[i];
    }
    if (X.size(1) == 0) {
        e.set_size(e.size(0), 0);
    } else {
        csz_idx_1 = X.size(1);
        e.set_size(1, X.size(1));
        for (xi = 0; xi < csz_idx_1; xi++) {
            acoef = xi * 241;
            if (rtIsNaN(X[acoef])) {
                e[xi] = 0.0;
            } else {
                e[xi] = X[acoef];
            }
            for (k = 0; k < 240; k++) {
                xoffset = (acoef + k) + 1;
                if (!rtIsNaN(X[xoffset])) {
                    e[xi] = e[xi] + X[xoffset];
                }
            }
        }
    }
    e.set_size(1, e.size(1));
    xoffset = e.size(1) - 1;
    for (i = 0; i <= xoffset; i++) {
        e[i] = -e[i] / 7.9128893362299619;
    }
    entropy.set_size(e.size(1));
    xoffset = e.size(1);
    for (i = 0; i < xoffset; i++) {
        entropy[i] = e[i];
    }
}

void c_spectralEntropy(const ::coder::array<double, 1U> &x,
                       ::coder::array<double, 1U> &entropy)
{
    static const double b_dv[882] = {
        1.2658332689985397E-5,  5.0632689826468624E-5,  0.00011392114864122727,
        0.00020252050462882254, 0.00031642627170869186, 0.00045563268245252253,
        0.00062013268837601832, 0.00080991796029605823, 0.0010249788887520817,
        0.0012653045844930322,  0.0015308828790284723,  0.0018217003252448127,
        0.00213774219808599,    0.0024789924952993703,  0.0028454339382458227,
        0.0032370479727745205,  0.0036538147701625778,  0.0040957132281188025,
        0.0045627209718525075,  0.0050548143552061053,  0.0055719684618524834,
        0.0061141571065567724,  0.0066813528365020081,  0.0072735269326791308,
        0.0078906494113413217,  0.0085326890255219556,  0.00919961326661689,
        0.0098913883660304847,  0.010607979296885284,   0.011349349775795603,
        0.012115462264704835,   0.012906277972785984,   0.013721756858405598,
        0.014561857631151642,   0.015426537753923775,   0.016315753445087344,
        0.017229459680690118,   0.018167610196742123,   0.019130157491557886,
        0.020117052828161952,   0.021128246236756243,   0.022163686517250425,
        0.023223321241854333,   0.024307096757732516,   0.025414958189720782,
        0.026546849443104703,   0.027702713206460228,   0.028882490954554974,
        0.030086122951312078,   0.031313548252834555,   0.032564704710491,
        0.033839528974062838,   0.035137956494951328,   0.036459921529446437,
        0.03780535714205524,    0.039174195208891371,   0.040566366421124267,
        0.041981800288488469,   0.043420425142852714,   0.044882168141849033,
        0.046366955272560573,   0.047874711355269495,   0.049405360047263314,
        0.050958823846700585,   0.052535024096534877,   0.05413388098849764,
        0.055755313567138975,   0.057399239733926855,   0.059065576251403962,
        0.060754238747402156,   0.062465141719314832,   0.064198198538425844,
        0.06595332145429611,    0.067730421599206447,   0.069529408992657471,
        0.0713501925459254,     0.0731926800666744,     0.075056778263624391,
        0.076942392751274735,   0.078849428054683479,   0.080777787614301322,
        0.08272737379086087,    0.084698087870320349,   0.086689830068861939,
        0.088702499537944124,   0.090735994369407991,   0.0927902116006371,
        0.094865047219771015,   0.096960396170971519,   0.099076152359741987,
        0.10121220865829966,    0.10336845691099938,    0.1055447879398102,
        0.10774109154984329,    0.10995725653493155,    0.11219317068326012,
        0.11444872078304852,    0.11672379262828247,    0.11901827102449675,
        0.12133203979460772,    0.12366498178479601,    0.12601697887043817,
        0.12838791196208788,    0.13077766101150562,    0.13318610501773731,
        0.135613122033241,      0.13805858917006142,    0.1405223826060521,
        0.14300437759114515,    0.14550444845366761,    0.14802246860670432,
        0.15055831055450825,    0.15311184589895516,    0.15568294534604543,
        0.15827147871245034,    0.16087731493210372,    0.16350032206283838,
        0.16614036729306664,    0.16879731694850514,    0.17147103649894324,
        0.17416139056505459,    0.17686824292525177,    0.17959145652258401,
        0.18233089347167647,    0.18508641506571205,    0.18785788178345442,
        0.1906451532963126,     0.19344808847544609,    0.19626654539891092,
        0.1991003813588455,     0.20194945286869637,    0.20481361567048323,
        0.20769272474210376,    0.21058663430467595,    0.21349519782991977,
        0.21641826804757619,    0.21935569695286417,    0.22230733581397411,
        0.22527303517959946,    0.22825264488650326,    0.23124601406712164,
        0.234252991157203,      0.23727342390348138,    0.24030715937138686,
        0.24335404395278776,    0.24641392337376955,    0.24948664270244525,
        0.25257204635680086,    0.25566997811257242,    0.25878028111115692,
        0.26190279786755366,    0.26503737027833907,    0.26818383962967146,
        0.27134204660532735,    0.27451183129476842,    0.277693033201238,
        0.28088549124988771,    0.28408904379593336,    0.2873035286328392,
        0.2905287830005312,     0.2937646435936383,     0.29701094656976063,
        0.30026752755776609,    0.30353422166611221,    0.30681086349119563,
        0.31009728712572737,    0.31339332616713211,    0.31669881372597508,
        0.32001358243441147,    0.32333746445466061,    0.32667029148750504,
        0.330011894780811,      0.33336210513807396,    0.33672075292698445,
        0.34008766808801832,    0.34346268014304648,    0.34684561820396737,
        0.350236310981359,      0.35363458679315252,    0.3570402735733248,
        0.3604531988806105,     0.36387318990723394,    0.36730007348765792,
        0.370733676107353,      0.37417382391158188,    0.37762034271420281,
        0.38107305800648955,    0.38453179496596634,    0.387996378465261,
        0.39146663308097118,    0.39494238310254692,    0.398423452541188,
        0.40190966513875392,    0.40540084437668933,    0.40889681348496093,
        0.41239739545100873,    0.415902413028708,      0.4194116887473448,
        0.42292504492060046,    0.42644230365554986,    0.42996328686166835,
        0.43348781625984839,    0.43701571339142742,    0.44054679962722293,
        0.4440808961765777,     0.44761782409641221,    0.45115740430028506,
        0.45469945756746138,    0.45824380455198604,    0.46179026579176624,
        0.46533866171765681,    0.46888881266255317,    0.47244053887048842,
        0.47599366050573444,    0.47954799766190859,    0.4831033703710817,
        0.48665959861289165,    0.49021650232365738,    0.49377390140549715,
        0.49733161573544632,    0.50088946517457844,    0.50444726957712627,
        0.5080048487996025,     0.511562022709922,      0.51511861119652114,
        0.518674434177479,      0.52222931160963459,    0.52578306349770265,
        0.52933550990338873,    0.53288647095449881,    0.53643576685404759,
        0.53998321788936177,    0.54352864444117954,    0.547071866992746,
        0.55061270613890134,    0.55415098259516615,    0.55768651720681817,
        0.56121913095796416,    0.56474864498060351,    0.56827488056368525,
        0.571797659162157,      0.57531680240600436,    0.57883213210928386,
        0.58234347027914357,    0.58585063912483681,    0.58935346106672326,
        0.59285175874526108,    0.59634535502998665,    0.59983407302848368,
        0.60331773609534,       0.60679616784109125,    0.61026919214115238,
        0.61373663314473514,    0.61719831528375224,    0.62065406328170714,
        0.62410370216256827,    0.62754705725962934,    0.63098395422435272,
        0.63441421903519757,    0.6378376780064311,     0.64125415779692307,
        0.64466348541892216,    0.648065488246815,      0.65145999402586729,
        0.65484683088094509,    0.65822582732521784,    0.66159681226884082,
        0.66495961502761847,    0.66831406533164639,    0.67165999333393267,
        0.67499722961899833,    0.67832560521145469,    0.68164495158455929,
        0.68495510066874954,    0.68825588486015166,    0.69154713702906823,
        0.69482869052843943,    0.69810037920228163,    0.70136203739409986,
        0.70461349995527633,    0.70785460225343155,    0.71108518018076083,
        0.71430507016234379,    0.71751410916442548,    0.72071213470267259,
        0.72389898485040094,    0.72707449824677228,    0.730238514104967,
        0.73339087222032306,    0.7365314129784496,     0.7396599773633078,
        0.74277640696526226,    0.74588054398910208,    0.74897223126203072,
        0.75205131224162369,    0.75511763102375551,    0.75817103235049277,
        0.76121136161795655,    0.76423846488414937,    0.76725218887675006,
        0.77025238100087479,    0.77323888934680385,    0.77621156269767222,
        0.77917025053712663,    0.78211480305694736,    0.78504507116463251,
        0.78796090649094785,    0.7908621613974387,     0.79374868898390627,
        0.79662034309584406,    0.79947697833183973,    0.80231845005093649,
        0.80514461437995688,    0.80795532822078786,    0.81075044925762563,
        0.81352983596418249,    0.81629334761085171,    0.81904084427183421,
        0.82177218683222275,    0.82448723699504578,    0.82718585728827088,
        0.82986791107176383,    0.83253326254420834,    0.83518177674998162,
        0.83781331958598826,    0.840427757808449,      0.8430249590396488,
        0.84560479177463865,    0.84816712538789418,    0.85071183013993013,
        0.85323877718386953,    0.85574783857196624,    0.85823888726208519,
        0.86071179712413459,    0.86316644294645106,    0.86560270044214094,
        0.86802044625537234,    0.87041955796762238,    0.87279991410387359,
        0.87516139413876681,    0.87750387850270206,    0.87982724858789407,
        0.88213138675437663,    0.8844161763359597,     0.88668150164613713,
        0.88892724798394274,    0.89115330163975959,    0.89335954990107658,
        0.895545881058196,      0.89771218440988876,    0.89985835026900129,
        0.90198426996800718,    0.90408983586451186,    0.90617494134670029,
        0.90823948083873685,    0.91028334980611114,    0.91230644476092915,
        0.9143086632671551,     0.916289903945797,      0.91825006648004071,
        0.9201890516203276,     0.92210676118938228,    0.92400309808718162,
        0.925877966295872,      0.9277312708846317,     0.9295629180144761,
        0.93137281494301072,    0.93316087002912518,    0.93492699273763524,
        0.93667109364386558,    0.93839308443817815,    0.94009287793044327,
        0.94177038805445523,    0.94342552987228889,    0.94505821957860081,
        0.9466683745048734,     0.9482559131235998,     0.94982075505241181,
        0.9513628210581504,     0.95288203306087782,    0.9543783141378297,
        0.95585158852731189,    0.95730178163253454,    0.95872882002539084,
        0.96013263145017347,    0.96151314482723449,    0.96287029025658333,
        0.96420399902142662,    0.9655142035916473,     0.966800837627224,
        0.96806383598159029,    0.96930313470493223,    0.97051867104742806,
        0.97171038346242389,    0.97287821160955112,    0.97402209635778059,
        0.97514197978841766,    0.97623780519803416,    0.97730951710133951,
        0.97835706123399069,    0.97938038455533882,    0.98037943525111615,
        0.981354162736058,      0.98230451765646531,    0.98323045189270308,
        0.98413191856163673,    0.98500887201900644,    0.98586126786173767,
        0.98668906293018988,    0.98749221531034126,    0.988270684335912,
        0.98902443059042233,    0.98975341590918886,    0.99045760338125677,
        0.99113695735126894,    0.99179144342127112,    0.9924210284524535,
        0.993025680566829,      0.99360536914884734,    0.99416006484694452,
        0.99468973957502993,    0.99519436651390791,    0.99567392011263567,
        0.99612837608981719,    0.99655771143483274,    0.99696190440900379,
        0.9973409345466937,     0.99769478265634426,    0.99802343082144707,
        0.99832686240145074,    0.998605062032604,      0.99885801562873267,
        0.99908571038195371,    0.99928813476332334,    0.999465278523421,
        0.999617132692868,      0.999743689582782,      0.99984494278516611,
        0.99992088717323346,    0.99997151890166669,    0.99999683540681283,
        0.99999683540681283,    0.99997151890166669,    0.99992088717323346,
        0.99984494278516611,    0.999743689582782,      0.999617132692868,
        0.999465278523421,      0.99928813476332334,    0.99908571038195371,
        0.99885801562873267,    0.998605062032604,      0.99832686240145074,
        0.99802343082144707,    0.99769478265634426,    0.9973409345466937,
        0.99696190440900379,    0.99655771143483274,    0.99612837608981719,
        0.99567392011263567,    0.99519436651390791,    0.99468973957502993,
        0.99416006484694452,    0.99360536914884734,    0.993025680566829,
        0.9924210284524535,     0.99179144342127112,    0.99113695735126894,
        0.99045760338125677,    0.98975341590918886,    0.98902443059042233,
        0.988270684335912,      0.98749221531034126,    0.98668906293018988,
        0.98586126786173767,    0.98500887201900644,    0.98413191856163673,
        0.98323045189270308,    0.98230451765646531,    0.981354162736058,
        0.98037943525111615,    0.97938038455533882,    0.97835706123399069,
        0.97730951710133951,    0.97623780519803416,    0.97514197978841766,
        0.97402209635778059,    0.97287821160955112,    0.97171038346242389,
        0.97051867104742806,    0.96930313470493223,    0.96806383598159029,
        0.966800837627224,      0.9655142035916473,     0.96420399902142662,
        0.96287029025658333,    0.96151314482723449,    0.96013263145017347,
        0.95872882002539084,    0.95730178163253454,    0.95585158852731189,
        0.9543783141378297,     0.95288203306087782,    0.9513628210581504,
        0.94982075505241181,    0.9482559131235998,     0.9466683745048734,
        0.94505821957860081,    0.94342552987228889,    0.94177038805445523,
        0.94009287793044327,    0.93839308443817815,    0.93667109364386558,
        0.93492699273763524,    0.93316087002912518,    0.93137281494301072,
        0.9295629180144761,     0.9277312708846317,     0.925877966295872,
        0.92400309808718162,    0.92210676118938228,    0.9201890516203276,
        0.91825006648004071,    0.916289903945797,      0.9143086632671551,
        0.91230644476092915,    0.91028334980611114,    0.90823948083873685,
        0.90617494134670029,    0.90408983586451186,    0.90198426996800718,
        0.89985835026900129,    0.89771218440988876,    0.895545881058196,
        0.89335954990107658,    0.89115330163975959,    0.88892724798394274,
        0.88668150164613713,    0.8844161763359597,     0.88213138675437663,
        0.87982724858789407,    0.87750387850270206,    0.87516139413876681,
        0.87279991410387359,    0.87041955796762238,    0.86802044625537234,
        0.86560270044214094,    0.86316644294645106,    0.86071179712413459,
        0.85823888726208519,    0.85574783857196624,    0.85323877718386953,
        0.85071183013993013,    0.84816712538789418,    0.84560479177463865,
        0.8430249590396488,     0.840427757808449,      0.83781331958598826,
        0.83518177674998162,    0.83253326254420834,    0.82986791107176383,
        0.82718585728827088,    0.82448723699504578,    0.82177218683222275,
        0.81904084427183421,    0.81629334761085171,    0.81352983596418249,
        0.81075044925762563,    0.80795532822078786,    0.80514461437995688,
        0.80231845005093649,    0.79947697833183973,    0.79662034309584406,
        0.79374868898390627,    0.7908621613974387,     0.78796090649094785,
        0.78504507116463251,    0.78211480305694736,    0.77917025053712663,
        0.77621156269767222,    0.77323888934680385,    0.77025238100087479,
        0.76725218887675006,    0.76423846488414937,    0.76121136161795655,
        0.75817103235049277,    0.75511763102375551,    0.75205131224162369,
        0.74897223126203072,    0.74588054398910208,    0.74277640696526226,
        0.7396599773633078,     0.7365314129784496,     0.73339087222032306,
        0.730238514104967,      0.72707449824677228,    0.72389898485040094,
        0.72071213470267259,    0.71751410916442548,    0.71430507016234379,
        0.71108518018076083,    0.70785460225343155,    0.70461349995527633,
        0.70136203739409986,    0.69810037920228163,    0.69482869052843943,
        0.69154713702906823,    0.68825588486015166,    0.68495510066874954,
        0.68164495158455929,    0.67832560521145469,    0.67499722961899833,
        0.67165999333393267,    0.66831406533164639,    0.66495961502761847,
        0.66159681226884082,    0.65822582732521784,    0.65484683088094509,
        0.65145999402586729,    0.648065488246815,      0.64466348541892216,
        0.64125415779692307,    0.6378376780064311,     0.63441421903519757,
        0.63098395422435272,    0.62754705725962934,    0.62410370216256827,
        0.62065406328170714,    0.61719831528375224,    0.61373663314473514,
        0.61026919214115238,    0.60679616784109125,    0.60331773609534,
        0.59983407302848368,    0.59634535502998665,    0.59285175874526108,
        0.58935346106672326,    0.58585063912483681,    0.58234347027914357,
        0.57883213210928386,    0.57531680240600436,    0.571797659162157,
        0.56827488056368525,    0.56474864498060351,    0.56121913095796416,
        0.55768651720681817,    0.55415098259516615,    0.55061270613890134,
        0.547071866992746,      0.54352864444117954,    0.53998321788936177,
        0.53643576685404759,    0.53288647095449881,    0.52933550990338873,
        0.52578306349770265,    0.52222931160963459,    0.518674434177479,
        0.51511861119652114,    0.511562022709922,      0.5080048487996025,
        0.50444726957712627,    0.50088946517457844,    0.49733161573544632,
        0.49377390140549715,    0.49021650232365738,    0.48665959861289165,
        0.4831033703710817,     0.47954799766190859,    0.47599366050573444,
        0.47244053887048842,    0.46888881266255317,    0.46533866171765681,
        0.46179026579176624,    0.45824380455198604,    0.45469945756746138,
        0.45115740430028506,    0.44761782409641221,    0.4440808961765777,
        0.44054679962722293,    0.43701571339142742,    0.43348781625984839,
        0.42996328686166835,    0.42644230365554986,    0.42292504492060046,
        0.4194116887473448,     0.415902413028708,      0.41239739545100873,
        0.40889681348496093,    0.40540084437668933,    0.40190966513875392,
        0.398423452541188,      0.39494238310254692,    0.39146663308097118,
        0.387996378465261,      0.38453179496596634,    0.38107305800648955,
        0.37762034271420281,    0.37417382391158188,    0.370733676107353,
        0.36730007348765792,    0.36387318990723394,    0.3604531988806105,
        0.3570402735733248,     0.35363458679315252,    0.350236310981359,
        0.34684561820396737,    0.34346268014304648,    0.34008766808801832,
        0.33672075292698445,    0.33336210513807396,    0.330011894780811,
        0.32667029148750504,    0.32333746445466061,    0.32001358243441147,
        0.31669881372597508,    0.31339332616713211,    0.31009728712572737,
        0.30681086349119563,    0.30353422166611221,    0.30026752755776609,
        0.29701094656976063,    0.2937646435936383,     0.2905287830005312,
        0.2873035286328392,     0.28408904379593336,    0.28088549124988771,
        0.277693033201238,      0.27451183129476842,    0.27134204660532735,
        0.26818383962967146,    0.26503737027833907,    0.26190279786755366,
        0.25878028111115692,    0.25566997811257242,    0.25257204635680086,
        0.24948664270244525,    0.24641392337376955,    0.24335404395278776,
        0.24030715937138686,    0.23727342390348138,    0.234252991157203,
        0.23124601406712164,    0.22825264488650326,    0.22527303517959946,
        0.22230733581397411,    0.21935569695286417,    0.21641826804757619,
        0.21349519782991977,    0.21058663430467595,    0.20769272474210376,
        0.20481361567048323,    0.20194945286869637,    0.1991003813588455,
        0.19626654539891092,    0.19344808847544609,    0.1906451532963126,
        0.18785788178345442,    0.18508641506571205,    0.18233089347167647,
        0.17959145652258401,    0.17686824292525177,    0.17416139056505459,
        0.17147103649894324,    0.16879731694850514,    0.16614036729306664,
        0.16350032206283838,    0.16087731493210372,    0.15827147871245034,
        0.15568294534604543,    0.15311184589895516,    0.15055831055450825,
        0.14802246860670432,    0.14550444845366761,    0.14300437759114515,
        0.1405223826060521,     0.13805858917006142,    0.135613122033241,
        0.13318610501773731,    0.13077766101150562,    0.12838791196208788,
        0.12601697887043817,    0.12366498178479601,    0.12133203979460772,
        0.11901827102449675,    0.11672379262828247,    0.11444872078304852,
        0.11219317068326012,    0.10995725653493155,    0.10774109154984329,
        0.1055447879398102,     0.10336845691099938,    0.10121220865829966,
        0.099076152359741987,   0.096960396170971519,   0.094865047219771015,
        0.0927902116006371,     0.090735994369407991,   0.088702499537944124,
        0.086689830068861939,   0.084698087870320349,   0.08272737379086087,
        0.080777787614301322,   0.078849428054683479,   0.076942392751274735,
        0.075056778263624391,   0.0731926800666744,     0.0713501925459254,
        0.069529408992657471,   0.067730421599206447,   0.06595332145429611,
        0.064198198538425844,   0.062465141719314832,   0.060754238747402156,
        0.059065576251403962,   0.057399239733926855,   0.055755313567138975,
        0.05413388098849764,    0.052535024096534877,   0.050958823846700585,
        0.049405360047263314,   0.047874711355269495,   0.046366955272560573,
        0.044882168141849033,   0.043420425142852714,   0.041981800288488469,
        0.040566366421124267,   0.039174195208891371,   0.03780535714205524,
        0.036459921529446437,   0.035137956494951328,   0.033839528974062838,
        0.032564704710491,      0.031313548252834555,   0.030086122951312078,
        0.028882490954554974,   0.027702713206460228,   0.026546849443104703,
        0.025414958189720782,   0.024307096757732516,   0.023223321241854333,
        0.022163686517250425,   0.021128246236756243,   0.020117052828161952,
        0.019130157491557886,   0.018167610196742123,   0.017229459680690118,
        0.016315753445087344,   0.015426537753923775,   0.014561857631151642,
        0.013721756858405598,   0.012906277972785984,   0.012115462264704835,
        0.011349349775795603,   0.010607979296885284,   0.0098913883660304847,
        0.00919961326661689,    0.0085326890255219556,  0.0078906494113413217,
        0.0072735269326791308,  0.0066813528365020081,  0.0061141571065567724,
        0.0055719684618524834,  0.0050548143552061053,  0.0045627209718525075,
        0.0040957132281188025,  0.0036538147701625778,  0.0032370479727745205,
        0.0028454339382458227,  0.0024789924952993703,  0.00213774219808599,
        0.0018217003252448127,  0.0015308828790284723,  0.0012653045844930322,
        0.0010249788887520817,  0.00080991796029605823, 0.00062013268837601832,
        0.00045563268245252253, 0.00031642627170869186, 0.00020252050462882254,
        0.00011392114864122727, 5.0632689826468624E-5,  1.2658332689985397E-5};
    array<creal_T, 2U> Y;
    array<creal_T, 2U> Yb;
    array<creal_T, 2U> c_y;
    array<creal_T, 2U> r;
    array<double, 2U> X;
    array<double, 2U> a;
    array<double, 2U> b_y;
    array<double, 2U> e;
    array<double, 2U> y;
    array<int, 2U> index_f2;
    array<int, 1U> r1;
    fftw_iodim howmany_iodims;
    fftw_iodim iodims;
    double Y_re;
    int acoef;
    int csz_idx_1;
    int i;
    int k;
    int xi;
    int xoffset;
    csz_idx_1 = static_cast<int>(
        floor((static_cast<double>(x.size(0)) - 882.0) / 441.0));
    y.set_size(882, csz_idx_1 + 1);
    xoffset = 882 * (csz_idx_1 + 1);
    for (i = 0; i < xoffset; i++) {
        y[i] = 0.0;
    }
    for (acoef = 0; acoef <= csz_idx_1; acoef++) {
        i = 441 * acoef;
        for (xi = 0; xi < 882; xi++) {
            y[xi + 882 * acoef] = x[xi + i];
        }
    }
    a.set_size(882, y.size(1));
    xoffset = 882 * y.size(1);
    for (i = 0; i < xoffset; i++) {
        a[i] = y[i];
    }
    csz_idx_1 = y.size(1);
    y.set_size(882, csz_idx_1);
    if (csz_idx_1 != 0) {
        acoef = (a.size(1) != 1);
        i = csz_idx_1 - 1;
        for (k = 0; k <= i; k++) {
            csz_idx_1 = acoef * k;
            for (xoffset = 0; xoffset < 882; xoffset++) {
                y[xoffset + 882 * k] =
                    a[xoffset + 882 * csz_idx_1] * b_dv[xoffset];
            }
        }
    }
    if (y.size(1) == 0) {
        Y.set_size(882, 0);
    } else {
        fftw_plan plan;
        iodims.n = 882;
        iodims.is = 1;
        iodims.os = 1;
        howmany_iodims.n = y.size(1);
        howmany_iodims.is = 882;
        howmany_iodims.os = 882;
        mylock();
        fftw_init_threads();
        fftw_plan_with_nthreads(8);
        myunlock();
        Y.set_size(882, y.size(1));
        mylock();
        plan = fftw_plan_guru_dft_r2c(1, &iodims, 1, &howmany_iodims,
                                      (double *)&y[0], (fftw_complex *)&Y[0],
                                      (unsigned int)FFTW_PRESERVE_INPUT |
                                          (unsigned int)FFTW_ESTIMATE);
        myunlock();
        fftw_execute(plan);
        mylock();
        fftw_destroy_plan(plan);
        myunlock();
        csz_idx_1 = y.size(1);
        index_f2.set_size(1, y.size(1));
        index_f2[0] = 1;
        acoef = 1;
        for (k = 2; k <= csz_idx_1; k++) {
            acoef++;
            index_f2[k - 1] = acoef;
        }
        acoef = 443;
        xoffset = index_f2.size(1);
        do {
            r1.set_size(index_f2.size(1));
            c_y.set_size(1, index_f2.size(1));
            for (i = 0; i < xoffset; i++) {
                xi = index_f2[i];
                r1[i] = xi - 1;
                c_y[i].re = Y[(882 * (xi - 1) - acoef) + 883].re;
                c_y[i].im = -Y[(882 * (xi - 1) - acoef) + 883].im;
            }
            csz_idx_1 = c_y.size(1);
            for (i = 0; i < csz_idx_1; i++) {
                Y[(acoef + 882 * r1[i]) - 1] = c_y[i];
            }
            acoef++;
        } while (!(acoef == 883));
    }
    xoffset = Y.size(1);
    Yb.set_size(442, Y.size(1));
    for (i = 0; i < xoffset; i++) {
        for (xi = 0; xi < 442; xi++) {
            double Y_im;
            double b_Y_re;
            Y_re = Y[xi + 882 * i].re;
            Y_im = -Y[xi + 882 * i].im;
            b_Y_re = Y[xi + 882 * i].re * Y_re - Y[xi + 882 * i].im * Y_im;
            Y_im = Y[xi + 882 * i].re * Y_im + Y[xi + 882 * i].im * Y_re;
            if (Y_im == 0.0) {
                Yb[xi + 442 * i].re = b_Y_re / 97461.124999999869;
                Yb[xi + 442 * i].im = 0.0;
            } else if (b_Y_re == 0.0) {
                Yb[xi + 442 * i].re = 0.0;
                Yb[xi + 442 * i].im = Y_im / 97461.124999999869;
            } else {
                Yb[xi + 442 * i].re = b_Y_re / 97461.124999999869;
                Yb[xi + 442 * i].im = Y_im / 97461.124999999869;
            }
        }
    }
    csz_idx_1 = Yb.size(1) - 1;
    r.set_size(1, Yb.size(1));
    for (i = 0; i <= csz_idx_1; i++) {
        r[i].re = 0.5 * Yb[442 * i].re;
        r[i].im = 0.5 * Yb[442 * i].im;
    }
    xoffset = r.size(1);
    for (i = 0; i < xoffset; i++) {
        Yb[442 * i] = r[i];
    }
    csz_idx_1 = Yb.size(1) - 1;
    r.set_size(1, Yb.size(1));
    for (i = 0; i <= csz_idx_1; i++) {
        r[i].re = 0.5 * Yb[442 * i + 441].re;
        r[i].im = 0.5 * Yb[442 * i + 441].im;
    }
    xoffset = r.size(1);
    for (i = 0; i < xoffset; i++) {
        Yb[442 * i + 441] = r[i];
    }
    X.set_size(442, Yb.size(1));
    xoffset = 442 * Yb.size(1);
    for (i = 0; i < xoffset; i++) {
        X[i] = Yb[i].re;
    }
    if (X.size(1) == 0) {
        e.set_size(1, 0);
    } else {
        csz_idx_1 = X.size(1);
        e.set_size(1, X.size(1));
        for (xi = 0; xi < csz_idx_1; xi++) {
            acoef = xi * 442;
            Y_re = X[acoef];
            for (k = 0; k < 441; k++) {
                Y_re += X[(acoef + k) + 1];
            }
            e[xi] = Y_re;
        }
    }
    b_y.set_size(442, e.size(1));
    csz_idx_1 = e.size(1);
    for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
        acoef = xoffset * 442;
        for (xi = 0; xi < 442; xi++) {
            b_y[acoef + xi] = e[xoffset];
        }
    }
    xoffset = 442 * X.size(1);
    X.set_size(442, X.size(1));
    for (i = 0; i < xoffset; i++) {
        X[i] = X[i] / b_y[i];
    }
    csz_idx_1 = 442 * X.size(1);
    b_y.set_size(442, X.size(1));
    for (k = 0; k < csz_idx_1; k++) {
        b_y[k] = internal::scalar::b_log2(X[k]);
    }
    xoffset = 442 * X.size(1);
    X.set_size(442, X.size(1));
    for (i = 0; i < xoffset; i++) {
        X[i] = X[i] * b_y[i];
    }
    if (X.size(1) == 0) {
        e.set_size(e.size(0), 0);
    } else {
        csz_idx_1 = X.size(1);
        e.set_size(1, X.size(1));
        for (xi = 0; xi < csz_idx_1; xi++) {
            acoef = xi * 442;
            if (rtIsNaN(X[acoef])) {
                e[xi] = 0.0;
            } else {
                e[xi] = X[acoef];
            }
            for (k = 0; k < 441; k++) {
                xoffset = (acoef + k) + 1;
                if (!rtIsNaN(X[xoffset])) {
                    e[xi] = e[xi] + X[xoffset];
                }
            }
        }
    }
    e.set_size(1, e.size(1));
    xoffset = e.size(1) - 1;
    for (i = 0; i <= xoffset; i++) {
        e[i] = -e[i] / 8.7879025593914317;
    }
    entropy.set_size(e.size(1));
    xoffset = e.size(1);
    for (i = 0; i < xoffset; i++) {
        entropy[i] = e[i];
    }
}

void d_spectralEntropy(const ::coder::array<double, 1U> &x,
                       ::coder::array<double, 1U> &entropy)
{
    static const double b_dv[960] = {
        1.0686892060463027E-5,  4.27471114031186E-5,    9.6179287531583668E-5,
        0.0001709811363502789,  0.00026714946026207276, 0.00038468014830495,
        0.00052356817632781549, 0.00068380760720526679, 0.00086539159109116914,
        0.0010683123657118654,  0.0012925612566976885,  0.0015381286779538872,
        0.0018050041320702981,  0.00209317621077032,    0.0024026325953982464,
        0.002733360057446288,   0.0030853444591195656,  0.0034585707539409594,
        0.0038530229873938726,  0.0042686842976045747,  0.0047055369160628469,
        0.0051635621683815414,  0.0056427404750949983,  0.0061430513524957653,
        0.0066644734135105077,  0.0072069843686141111,  0.0077705610267824188,
        0.0083551792964838834,  0.0089608141867090763,  0.009587439808039222,
        0.010235029373752758,   0.010903555200970583,   0.011592988711839225,
        0.01230330043475264,    0.013034460005612036,   0.013786436169123728,
        0.014559196780135342,   0.01535270880500994,    0.01616693832303806,
        0.01700185052788783,    0.017857409729092777,   0.018733579353577667,
        0.01963032194722153,    0.020547599176459264,   0.02148537182991983,
        0.0224435998201028,     0.023422242185091757,   0.024421257090305404,
        0.025440601830285903,   0.026480232830524475,   0.027540105649323909,
        0.028620174979698598,   0.0297203946513111,     0.030840717632446002,
        0.031981096032020095,   0.033141481101630066,   0.034321823237635829,
        0.0355220719832815,     0.036742176030851781,   0.037982083223865759,
        0.039241740559306015,   0.0405210941898847,     0.041820089426345131,
        0.043138670739799767,   0.044476781764104023,   0.045834365298265511,
        0.047211363308889476,   0.048607716932659473,   0.050023366478853692,
        0.051458251431896584,   0.052912310453945621,   0.054385481387513646,
        0.055877701258125523,   0.057388906277010543,   0.058919031843829073,
        0.060468012549433958,   0.062035782178666843,   0.063622273713188515,
        0.065227419334343784,   0.066851150426060713,   0.068493397577783666,
        0.070154090587440376,   0.071833158464443214,   0.073530529432723424,
        0.075246130933799671,   0.076979889629879839,   0.078731731406995686,
        0.080501581378171261,   0.082289363886624223,   0.0840950025089997,
        0.08591842005863759,    0.087759538588871588,   0.0896182793963618,
        0.091494563024458742,   0.093388309266599856,   0.095299437169738543,
        0.097227865037804229,   0.099173510435195122,   0.10113629019030185,
        0.10311612039906276,    0.10511291642855097,    0.1071265929205919,
        0.10915706379541235,    0.11120424225532011,    0.11326804078841407,
        0.11534837117232571,    0.11744514447798998,    0.11955827107344685,
        0.12168766062767306,    0.12383322211444325,    0.12599486381622149,
        0.12817249332808139,    0.13036601756165689,    0.13257534274912125,
        0.13480037444719511,    0.1370410175411842,     0.13929717624904481,
        0.14156875412547876,    0.14385565406605566,    0.14615777831136434,
        0.14847502845119148,    0.15080730542872856,    0.15315450954480636,
        0.15551654046215668,    0.1578932972097018,     0.16028467818687048,
        0.162690581167941,      0.1651109033064117,     0.16754554113939674,
        0.16999439059204913,    0.17245734698200998,    0.17493430502388269,
        0.17742515883373444,    0.17992980193362207,    0.18244812725614368,
        0.18498002714901574,    0.18752539337967472,    0.19008411713990403,
        0.19265608905048509,    0.19524119916587312,    0.19783933697889716,
        0.20045039142548365,    0.20307425088940445,    0.2057108032070481,
        0.20835993567221445,    0.21102153504093268,    0.21369548753630219,
        0.21638167885335613,    0.21907999416394791,    0.22179031812165961,
        0.224512534866733,      0.2272465280310218,     0.2299921807429669,
        0.2327493756325914,     0.23551799483651881,    0.23829792000301053,
        0.24108903229702594,    0.24389121240530193,    0.24670434054145279,
        0.2495282964510917,     0.25236295941697068,    0.25520820826414131,
        0.25806392136513406,    0.26092997664515838,    0.26380625158732063,
        0.26669262323786158,    0.26958896821141193,    0.27249516269626722,
        0.27541108245968049,    0.27833660285317263,    0.281271598817861,
        0.28421594488980551,    0.2871695152053711,     0.29013218350660941,
        0.29310382314665506,    0.29608430709513966,    0.29907350794362253,
        0.30207129791103593,    0.30507754884914884,    0.30809213224804421,
        0.31111491924161244,    0.31414578061306031,    0.31718458680043438,
        0.32023120790215986,    0.32328551368259317,    0.32634737357758975,
        0.32941665670008485,    0.33249323184568835,    0.33557696749829452,
        0.33866773183570309,    0.34176539273525453,    0.34486981777947834,
        0.34798087426175295,    0.35109842919197909,    0.35422234930226459,
        0.35735250105262145,    0.36048875063667418,    0.3636309639873796,
        0.36677900678275788,    0.36993274445163493,    0.37309204217939462,
        0.37625676491374171,    0.37942677737047503,    0.38260194403927084,
        0.38578212918947524,    0.38896719687590658,    0.39215701094466665,
        0.39535143503896075,    0.39855033260492678,    0.40175356689747294,
        0.40496100098612264,    0.40817249776086839,    0.41138791993803248,
        0.41460713006613609,    0.41782999053177455,    0.42105636356550019,
        0.42428611124771165,    0.42751909551454931,    0.43075517816379777,
        0.433994220860793,      0.43723608514433626,    0.4404806324326131,
        0.44372772402911659,    0.4469772211285773,     0.45022898482289614,
        0.45348287610708277,    0.45673875588519747,    0.45999648497629714,
        0.46325592412038519,    0.46651693398436445,    0.46977937516799306,
        0.47304310820984413,    0.47630799359326648,    0.47957389175234943,
        0.48284066307788864,    0.48610816792335393,    0.48937626661085903,
        0.492644819437132,      0.49591368667948804,    0.49918272860180163,
        0.50245180546048018,    0.50572077751043754,    0.50898950501106766,
        0.512257848232219,      0.51552566746016637,    0.51879282300358465,
        0.52205917519951917,    0.52532458441935637,    0.52858891107479289,
        0.53185201562380224,    0.53511375857660026,    0.53837400050160733,
        0.54163260203140906,    0.54488942386871442,    0.54814432679230962,
        0.55139717166300983,    0.55464781942960706,    0.55789613113481373,
        0.561141967921204,      0.5643851910371479,     0.56762566184274421,
        0.57086324181574633,    0.57409779255748283,    0.57732917579877541,
        0.58055725340584852,    0.58378188738623416,    0.58700293989467156,
        0.59022027323899839,    0.59343374988603825,    0.59664323246747863,
        0.59984858378574413,    0.60304966681986061,    0.60624634473131211,
        0.60943848086989183,    0.6126259387795423,     0.615808582204189,
        0.61898627509356507,    0.62215888160902666,    0.62532626612936015,
        0.62848829325658,       0.63164482782171549,    0.63479573489059016,
        0.63794087976958891,    0.64108012801141623,    0.64421334542084385,
        0.64734039806044663,    0.65046115225632872,    0.65357547460383691,
        0.65668323197326428,    0.65978429151554041,    0.66287852066791109,
        0.66596578715960453,    0.66904595901748531,    0.67211890457169732,
        0.6751844924612902,     0.67824259163983669,    0.68129307138103368,
        0.68433580128428984,    0.68737065128030128,    0.69039749163661057,
        0.693416192963153,      0.696426626217788,      0.69942866271181392,
        0.70242217411547136,    0.70540703246342717,    0.70838311016024536,
        0.71135027998584155,    0.714308415100921,      0.71725738905240144,
        0.7201970757788172,     0.72312734961570935,    0.72604808530099729,
        0.72895915798033284,    0.73186044321243815,    0.73475181697442471,
        0.73763315566709531,    0.74050433612022726,    0.74336523559783874,
        0.74621573180343381,    0.74905570288523116,    0.75188502744137375,
        0.75470358452511643,    0.75751125364999838,    0.76030791479499193,
        0.76309344840963367,    0.76586773541913589,    0.76863065722947488,
        0.771382095732462,      0.77412193331079227,    0.77685005284307174,
        0.77956633770882466,    0.78227067179347842,    0.78496293949332663,
        0.787643025720473,      0.79031081590774777,    0.79296619601360829,
        0.79560905252701208,    0.79823927247227022,    0.8008567434138758,
        0.80346135346131153,    0.80605299127383123,    0.80863154606522114,
        0.81119690760853391,    0.81374896624080217,    0.81628761286772522,
        0.818812738968333,      0.82132423659962561,    0.8238219984011862,
        0.82630591759977212,    0.82877588801387758,    0.83123180405827424,
        0.83367356074852283,    0.836101053705463,      0.838514179159674,
        0.8409128339559101,     0.84329691555751241,    0.84566632205078962,
        0.84802095214937623,    0.85036070519856111,    0.85268548117959142,
        0.854995180713947,      0.85728970506758961,    0.85956895615518292,
        0.86183283654428522,    0.86408124945951525,    0.86631409878668841,
        0.86853128907692578,    0.870732725550734,      0.87291831410205756,
        0.87508796130230015,    0.87724157440432049,    0.87937906134639532,
        0.88150033075615575,    0.88360529195449322,    0.88569385495943453,
        0.88776593048999075,    0.88982142996997138,    0.89186026553177244,
        0.89388235002013128,    0.89588759699585352,    0.89787592073950706,
        0.89984723625508711,    0.90180145927364885,    0.903738506256911,
        0.905658294400825,      0.907560741639116,      0.90944576664679144,
        0.91131328884361573,    0.91316322839755648,    0.91499550622819625,
        0.91681004401011346,    0.91860676417623055,    0.92038558992112962,
        0.92214644520433575,    0.92388925475356731,    0.9256139440679545,
        0.92732043942122289,    0.92900866786484615,    0.93067855723116333,
        0.93233003613646526,    0.93396303398404423,    0.93557748096721371,
        0.93717330807229093,    0.93875044708154809,    0.94030883057612724,
        0.941848391938924,      0.94336906535743381,    0.94487078582656592,
        0.94635348915142226,    0.94781711195004115,    0.94926159165610713,
        0.95068686652162526,    0.95209287561956124,    0.953479558846445,
        0.95484685692494076,    0.95619471140638057,    0.95752306467326287,
        0.958831859941716,      0.96012104126392472,    0.96139055353052272,
        0.96264034247294727,    0.96387035466576088,    0.96508053752893286,
        0.96627083933008917,    0.96744120918672183,    0.96859159706836584,
        0.96972195379873671,    0.97083223105783278,    0.97192238138400144,
        0.972992358175967,      0.97404211569482357,    0.97507160906599011,
        0.97608079428112826,    0.97706962820002441,    0.978038068552433,
        0.97898607393988391,    0.9799136038374523,     0.98082061859549041,
        0.98170707944132318,    0.98257294848090493,    0.98341818870043984,
        0.984242763967964,      0.98504663903488976,    0.98582977953751316,
        0.98659215199848171,    0.98733372382822693,    0.98805446332635616,
        0.98875433968300885,    0.98943332298017239,    0.99009138419296194,
        0.99072849519086115,    0.99134462873892393,    0.99193975849893956,
        0.99251385903055778,    0.99306690579237733,    0.9935988751429935,
        0.9941097443420106,     0.99459949155101235,    0.99506809583449685,
        0.99551553716077035,    0.99594179640280411,    0.99634685533905243,
        0.99673069665423031,    0.99709330394005535,    0.99743466169594752,
        0.99775475532969327,    0.9980535711580677,     0.998331096407421,
        0.99858731921422372,    0.9988222286255739,     0.99903581459966539,
        0.99922806800621711,    0.9993989806268635,     0.99954854515550573,
        0.999676755198624,      0.99978360527555044,    0.99986909081870423,
        0.99993320817378639,    0.99997595459993582,    0.99999732826984677,
        0.99999732826984677,    0.99997595459993582,    0.99993320817378639,
        0.99986909081870423,    0.99978360527555044,    0.999676755198624,
        0.99954854515550573,    0.9993989806268635,     0.99922806800621711,
        0.99903581459966539,    0.9988222286255739,     0.99858731921422372,
        0.998331096407421,      0.9980535711580677,     0.99775475532969327,
        0.99743466169594752,    0.99709330394005535,    0.99673069665423031,
        0.99634685533905243,    0.99594179640280411,    0.99551553716077035,
        0.99506809583449685,    0.99459949155101235,    0.9941097443420106,
        0.9935988751429935,     0.99306690579237733,    0.99251385903055778,
        0.99193975849893956,    0.99134462873892393,    0.99072849519086115,
        0.99009138419296194,    0.98943332298017239,    0.98875433968300885,
        0.98805446332635616,    0.98733372382822693,    0.98659215199848171,
        0.98582977953751316,    0.98504663903488976,    0.984242763967964,
        0.98341818870043984,    0.98257294848090493,    0.98170707944132318,
        0.98082061859549041,    0.9799136038374523,     0.97898607393988391,
        0.978038068552433,      0.97706962820002441,    0.97608079428112826,
        0.97507160906599011,    0.97404211569482357,    0.972992358175967,
        0.97192238138400144,    0.97083223105783278,    0.96972195379873671,
        0.96859159706836584,    0.96744120918672183,    0.96627083933008917,
        0.96508053752893286,    0.96387035466576088,    0.96264034247294727,
        0.96139055353052272,    0.96012104126392472,    0.958831859941716,
        0.95752306467326287,    0.95619471140638057,    0.95484685692494076,
        0.953479558846445,      0.95209287561956124,    0.95068686652162526,
        0.94926159165610713,    0.94781711195004115,    0.94635348915142226,
        0.94487078582656592,    0.94336906535743381,    0.941848391938924,
        0.94030883057612724,    0.93875044708154809,    0.93717330807229093,
        0.93557748096721371,    0.93396303398404423,    0.93233003613646526,
        0.93067855723116333,    0.92900866786484615,    0.92732043942122289,
        0.9256139440679545,     0.92388925475356731,    0.92214644520433575,
        0.92038558992112962,    0.91860676417623055,    0.91681004401011346,
        0.91499550622819625,    0.91316322839755648,    0.91131328884361573,
        0.90944576664679144,    0.907560741639116,      0.905658294400825,
        0.903738506256911,      0.90180145927364885,    0.89984723625508711,
        0.89787592073950706,    0.89588759699585352,    0.89388235002013128,
        0.89186026553177244,    0.88982142996997138,    0.88776593048999075,
        0.88569385495943453,    0.88360529195449322,    0.88150033075615575,
        0.87937906134639532,    0.87724157440432049,    0.87508796130230015,
        0.87291831410205756,    0.870732725550734,      0.86853128907692578,
        0.86631409878668841,    0.86408124945951525,    0.86183283654428522,
        0.85956895615518292,    0.85728970506758961,    0.854995180713947,
        0.85268548117959142,    0.85036070519856111,    0.84802095214937623,
        0.84566632205078962,    0.84329691555751241,    0.8409128339559101,
        0.838514179159674,      0.836101053705463,      0.83367356074852283,
        0.83123180405827424,    0.82877588801387758,    0.82630591759977212,
        0.8238219984011862,     0.82132423659962561,    0.818812738968333,
        0.81628761286772522,    0.81374896624080217,    0.81119690760853391,
        0.80863154606522114,    0.80605299127383123,    0.80346135346131153,
        0.8008567434138758,     0.79823927247227022,    0.79560905252701208,
        0.79296619601360829,    0.79031081590774777,    0.787643025720473,
        0.78496293949332663,    0.78227067179347842,    0.77956633770882466,
        0.77685005284307174,    0.77412193331079227,    0.771382095732462,
        0.76863065722947488,    0.76586773541913589,    0.76309344840963367,
        0.76030791479499193,    0.75751125364999838,    0.75470358452511643,
        0.75188502744137375,    0.74905570288523116,    0.74621573180343381,
        0.74336523559783874,    0.74050433612022726,    0.73763315566709531,
        0.73475181697442471,    0.73186044321243815,    0.72895915798033284,
        0.72604808530099729,    0.72312734961570935,    0.7201970757788172,
        0.71725738905240144,    0.714308415100921,      0.71135027998584155,
        0.70838311016024536,    0.70540703246342717,    0.70242217411547136,
        0.69942866271181392,    0.696426626217788,      0.693416192963153,
        0.69039749163661057,    0.68737065128030128,    0.68433580128428984,
        0.68129307138103368,    0.67824259163983669,    0.6751844924612902,
        0.67211890457169732,    0.66904595901748531,    0.66596578715960453,
        0.66287852066791109,    0.65978429151554041,    0.65668323197326428,
        0.65357547460383691,    0.65046115225632872,    0.64734039806044663,
        0.64421334542084385,    0.64108012801141623,    0.63794087976958891,
        0.63479573489059016,    0.63164482782171549,    0.62848829325658,
        0.62532626612936015,    0.62215888160902666,    0.61898627509356507,
        0.615808582204189,      0.6126259387795423,     0.60943848086989183,
        0.60624634473131211,    0.60304966681986061,    0.59984858378574413,
        0.59664323246747863,    0.59343374988603825,    0.59022027323899839,
        0.58700293989467156,    0.58378188738623416,    0.58055725340584852,
        0.57732917579877541,    0.57409779255748283,    0.57086324181574633,
        0.56762566184274421,    0.5643851910371479,     0.561141967921204,
        0.55789613113481373,    0.55464781942960706,    0.55139717166300983,
        0.54814432679230962,    0.54488942386871442,    0.54163260203140906,
        0.53837400050160733,    0.53511375857660026,    0.53185201562380224,
        0.52858891107479289,    0.52532458441935637,    0.52205917519951917,
        0.51879282300358465,    0.51552566746016637,    0.512257848232219,
        0.50898950501106766,    0.50572077751043754,    0.50245180546048018,
        0.49918272860180163,    0.49591368667948804,    0.492644819437132,
        0.48937626661085903,    0.48610816792335393,    0.48284066307788864,
        0.47957389175234943,    0.47630799359326648,    0.47304310820984413,
        0.46977937516799306,    0.46651693398436445,    0.46325592412038519,
        0.45999648497629714,    0.45673875588519747,    0.45348287610708277,
        0.45022898482289614,    0.4469772211285773,     0.44372772402911659,
        0.4404806324326131,     0.43723608514433626,    0.433994220860793,
        0.43075517816379777,    0.42751909551454931,    0.42428611124771165,
        0.42105636356550019,    0.41782999053177455,    0.41460713006613609,
        0.41138791993803248,    0.40817249776086839,    0.40496100098612264,
        0.40175356689747294,    0.39855033260492678,    0.39535143503896075,
        0.39215701094466665,    0.38896719687590658,    0.38578212918947524,
        0.38260194403927084,    0.37942677737047503,    0.37625676491374171,
        0.37309204217939462,    0.36993274445163493,    0.36677900678275788,
        0.3636309639873796,     0.36048875063667418,    0.35735250105262145,
        0.35422234930226459,    0.35109842919197909,    0.34798087426175295,
        0.34486981777947834,    0.34176539273525453,    0.33866773183570309,
        0.33557696749829452,    0.33249323184568835,    0.32941665670008485,
        0.32634737357758975,    0.32328551368259317,    0.32023120790215986,
        0.31718458680043438,    0.31414578061306031,    0.31111491924161244,
        0.30809213224804421,    0.30507754884914884,    0.30207129791103593,
        0.29907350794362253,    0.29608430709513966,    0.29310382314665506,
        0.29013218350660941,    0.2871695152053711,     0.28421594488980551,
        0.281271598817861,      0.27833660285317263,    0.27541108245968049,
        0.27249516269626722,    0.26958896821141193,    0.26669262323786158,
        0.26380625158732063,    0.26092997664515838,    0.25806392136513406,
        0.25520820826414131,    0.25236295941697068,    0.2495282964510917,
        0.24670434054145279,    0.24389121240530193,    0.24108903229702594,
        0.23829792000301053,    0.23551799483651881,    0.2327493756325914,
        0.2299921807429669,     0.2272465280310218,     0.224512534866733,
        0.22179031812165961,    0.21907999416394791,    0.21638167885335613,
        0.21369548753630219,    0.21102153504093268,    0.20835993567221445,
        0.2057108032070481,     0.20307425088940445,    0.20045039142548365,
        0.19783933697889716,    0.19524119916587312,    0.19265608905048509,
        0.19008411713990403,    0.18752539337967472,    0.18498002714901574,
        0.18244812725614368,    0.17992980193362207,    0.17742515883373444,
        0.17493430502388269,    0.17245734698200998,    0.16999439059204913,
        0.16754554113939674,    0.1651109033064117,     0.162690581167941,
        0.16028467818687048,    0.1578932972097018,     0.15551654046215668,
        0.15315450954480636,    0.15080730542872856,    0.14847502845119148,
        0.14615777831136434,    0.14385565406605566,    0.14156875412547876,
        0.13929717624904481,    0.1370410175411842,     0.13480037444719511,
        0.13257534274912125,    0.13036601756165689,    0.12817249332808139,
        0.12599486381622149,    0.12383322211444325,    0.12168766062767306,
        0.11955827107344685,    0.11744514447798998,    0.11534837117232571,
        0.11326804078841407,    0.11120424225532011,    0.10915706379541235,
        0.1071265929205919,     0.10511291642855097,    0.10311612039906276,
        0.10113629019030185,    0.099173510435195122,   0.097227865037804229,
        0.095299437169738543,   0.093388309266599856,   0.091494563024458742,
        0.0896182793963618,     0.087759538588871588,   0.08591842005863759,
        0.0840950025089997,     0.082289363886624223,   0.080501581378171261,
        0.078731731406995686,   0.076979889629879839,   0.075246130933799671,
        0.073530529432723424,   0.071833158464443214,   0.070154090587440376,
        0.068493397577783666,   0.066851150426060713,   0.065227419334343784,
        0.063622273713188515,   0.062035782178666843,   0.060468012549433958,
        0.058919031843829073,   0.057388906277010543,   0.055877701258125523,
        0.054385481387513646,   0.052912310453945621,   0.051458251431896584,
        0.050023366478853692,   0.048607716932659473,   0.047211363308889476,
        0.045834365298265511,   0.044476781764104023,   0.043138670739799767,
        0.041820089426345131,   0.0405210941898847,     0.039241740559306015,
        0.037982083223865759,   0.036742176030851781,   0.0355220719832815,
        0.034321823237635829,   0.033141481101630066,   0.031981096032020095,
        0.030840717632446002,   0.0297203946513111,     0.028620174979698598,
        0.027540105649323909,   0.026480232830524475,   0.025440601830285903,
        0.024421257090305404,   0.023422242185091757,   0.0224435998201028,
        0.02148537182991983,    0.020547599176459264,   0.01963032194722153,
        0.018733579353577667,   0.017857409729092777,   0.01700185052788783,
        0.01616693832303806,    0.01535270880500994,    0.014559196780135342,
        0.013786436169123728,   0.013034460005612036,   0.01230330043475264,
        0.011592988711839225,   0.010903555200970583,   0.010235029373752758,
        0.009587439808039222,   0.0089608141867090763,  0.0083551792964838834,
        0.0077705610267824188,  0.0072069843686141111,  0.0066644734135105077,
        0.0061430513524957653,  0.0056427404750949983,  0.0051635621683815414,
        0.0047055369160628469,  0.0042686842976045747,  0.0038530229873938726,
        0.0034585707539409594,  0.0030853444591195656,  0.002733360057446288,
        0.0024026325953982464,  0.00209317621077032,    0.0018050041320702981,
        0.0015381286779538872,  0.0012925612566976885,  0.0010683123657118654,
        0.00086539159109116914, 0.00068380760720526679, 0.00052356817632781549,
        0.00038468014830495,    0.00026714946026207276, 0.0001709811363502789,
        9.6179287531583668E-5,  4.27471114031186E-5,    1.0686892060463027E-5};
    array<creal_T, 2U> Y;
    array<creal_T, 2U> Yb;
    array<creal_T, 2U> c_y;
    array<creal_T, 2U> r;
    array<double, 2U> X;
    array<double, 2U> a;
    array<double, 2U> b_y;
    array<double, 2U> e;
    array<double, 2U> y;
    array<int, 2U> index_f2;
    array<int, 1U> r1;
    fftw_iodim howmany_iodims;
    fftw_iodim iodims;
    double Y_re;
    int acoef;
    int csz_idx_1;
    int i;
    int k;
    int xi;
    int xoffset;
    csz_idx_1 = static_cast<int>(
        floor((static_cast<double>(x.size(0)) - 960.0) / 480.0));
    y.set_size(960, csz_idx_1 + 1);
    xoffset = 960 * (csz_idx_1 + 1);
    for (i = 0; i < xoffset; i++) {
        y[i] = 0.0;
    }
    for (acoef = 0; acoef <= csz_idx_1; acoef++) {
        i = 480 * acoef;
        for (xi = 0; xi < 960; xi++) {
            y[xi + 960 * acoef] = x[xi + i];
        }
    }
    a.set_size(960, y.size(1));
    xoffset = 960 * y.size(1);
    for (i = 0; i < xoffset; i++) {
        a[i] = y[i];
    }
    csz_idx_1 = y.size(1);
    y.set_size(960, csz_idx_1);
    if (csz_idx_1 != 0) {
        acoef = (a.size(1) != 1);
        i = csz_idx_1 - 1;
        for (k = 0; k <= i; k++) {
            csz_idx_1 = acoef * k;
            for (xoffset = 0; xoffset < 960; xoffset++) {
                y[xoffset + 960 * k] =
                    a[xoffset + 960 * csz_idx_1] * b_dv[xoffset];
            }
        }
    }
    if (y.size(1) == 0) {
        Y.set_size(960, 0);
    } else {
        fftw_plan plan;
        iodims.n = 960;
        iodims.is = 1;
        iodims.os = 1;
        howmany_iodims.n = y.size(1);
        howmany_iodims.is = 960;
        howmany_iodims.os = 960;
        mylock();
        fftw_init_threads();
        fftw_plan_with_nthreads(8);
        myunlock();
        Y.set_size(960, y.size(1));
        mylock();
        plan = fftw_plan_guru_dft_r2c(1, &iodims, 1, &howmany_iodims,
                                      (double *)&y[0], (fftw_complex *)&Y[0],
                                      (unsigned int)FFTW_PRESERVE_INPUT |
                                          (unsigned int)FFTW_ESTIMATE);
        myunlock();
        fftw_execute(plan);
        mylock();
        fftw_destroy_plan(plan);
        myunlock();
        csz_idx_1 = y.size(1);
        index_f2.set_size(1, y.size(1));
        index_f2[0] = 1;
        acoef = 1;
        for (k = 2; k <= csz_idx_1; k++) {
            acoef++;
            index_f2[k - 1] = acoef;
        }
        acoef = 482;
        xoffset = index_f2.size(1);
        do {
            r1.set_size(index_f2.size(1));
            c_y.set_size(1, index_f2.size(1));
            for (i = 0; i < xoffset; i++) {
                xi = index_f2[i];
                r1[i] = xi - 1;
                c_y[i].re = Y[(960 * (xi - 1) - acoef) + 961].re;
                c_y[i].im = -Y[(960 * (xi - 1) - acoef) + 961].im;
            }
            csz_idx_1 = c_y.size(1);
            for (i = 0; i < csz_idx_1; i++) {
                Y[(acoef + 960 * r1[i]) - 1] = c_y[i];
            }
            acoef++;
        } while (!(acoef == 961));
    }
    xoffset = Y.size(1);
    Yb.set_size(481, Y.size(1));
    for (i = 0; i < xoffset; i++) {
        for (xi = 0; xi < 481; xi++) {
            double Y_im;
            double b_Y_re;
            Y_re = Y[xi + 960 * i].re;
            Y_im = -Y[xi + 960 * i].im;
            b_Y_re = Y[xi + 960 * i].re * Y_re - Y[xi + 960 * i].im * Y_im;
            Y_im = Y[xi + 960 * i].re * Y_im + Y[xi + 960 * i].im * Y_re;
            if (Y_im == 0.0) {
                Yb[xi + 481 * i].re = b_Y_re / 115440.12499999987;
                Yb[xi + 481 * i].im = 0.0;
            } else if (b_Y_re == 0.0) {
                Yb[xi + 481 * i].re = 0.0;
                Yb[xi + 481 * i].im = Y_im / 115440.12499999987;
            } else {
                Yb[xi + 481 * i].re = b_Y_re / 115440.12499999987;
                Yb[xi + 481 * i].im = Y_im / 115440.12499999987;
            }
        }
    }
    csz_idx_1 = Yb.size(1) - 1;
    r.set_size(1, Yb.size(1));
    for (i = 0; i <= csz_idx_1; i++) {
        r[i].re = 0.5 * Yb[481 * i].re;
        r[i].im = 0.5 * Yb[481 * i].im;
    }
    xoffset = r.size(1);
    for (i = 0; i < xoffset; i++) {
        Yb[481 * i] = r[i];
    }
    csz_idx_1 = Yb.size(1) - 1;
    r.set_size(1, Yb.size(1));
    for (i = 0; i <= csz_idx_1; i++) {
        r[i].re = 0.5 * Yb[481 * i + 480].re;
        r[i].im = 0.5 * Yb[481 * i + 480].im;
    }
    xoffset = r.size(1);
    for (i = 0; i < xoffset; i++) {
        Yb[481 * i + 480] = r[i];
    }
    X.set_size(481, Yb.size(1));
    xoffset = 481 * Yb.size(1);
    for (i = 0; i < xoffset; i++) {
        X[i] = Yb[i].re;
    }
    if (X.size(1) == 0) {
        e.set_size(1, 0);
    } else {
        csz_idx_1 = X.size(1);
        e.set_size(1, X.size(1));
        for (xi = 0; xi < csz_idx_1; xi++) {
            acoef = xi * 481;
            Y_re = X[acoef];
            for (k = 0; k < 480; k++) {
                Y_re += X[(acoef + k) + 1];
            }
            e[xi] = Y_re;
        }
    }
    b_y.set_size(481, e.size(1));
    csz_idx_1 = e.size(1);
    for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
        acoef = xoffset * 481;
        for (xi = 0; xi < 481; xi++) {
            b_y[acoef + xi] = e[xoffset];
        }
    }
    xoffset = 481 * X.size(1);
    X.set_size(481, X.size(1));
    for (i = 0; i < xoffset; i++) {
        X[i] = X[i] / b_y[i];
    }
    csz_idx_1 = 481 * X.size(1);
    b_y.set_size(481, X.size(1));
    for (k = 0; k < csz_idx_1; k++) {
        b_y[k] = internal::scalar::b_log2(X[k]);
    }
    xoffset = 481 * X.size(1);
    X.set_size(481, X.size(1));
    for (i = 0; i < xoffset; i++) {
        X[i] = X[i] * b_y[i];
    }
    if (X.size(1) == 0) {
        e.set_size(e.size(0), 0);
    } else {
        csz_idx_1 = X.size(1);
        e.set_size(1, X.size(1));
        for (xi = 0; xi < csz_idx_1; xi++) {
            acoef = xi * 481;
            if (rtIsNaN(X[acoef])) {
                e[xi] = 0.0;
            } else {
                e[xi] = X[acoef];
            }
            for (k = 0; k < 480; k++) {
                xoffset = (acoef + k) + 1;
                if (!rtIsNaN(X[xoffset])) {
                    e[xi] = e[xi] + X[xoffset];
                }
            }
        }
    }
    e.set_size(1, e.size(1));
    xoffset = e.size(1) - 1;
    for (i = 0; i <= xoffset; i++) {
        e[i] = -e[i] / 8.9098930837700419;
    }
    entropy.set_size(e.size(1));
    xoffset = e.size(1);
    for (i = 0; i < xoffset; i++) {
        entropy[i] = e[i];
    }
}

void spectralEntropy(const ::coder::array<double, 1U> &x,
                     ::coder::array<double, 1U> &entropy)
{
    static const double b_dv[240] = {
        0.00016991865450188826, 0.00067955912861095147, 0.0015285750326325953,
        0.0027163893120066285,  0.0042421946395164167,  0.0061049539640088413,
        0.0083034012152515824,  0.010836042164448945,   0.013701155439831247,
        0.016896793696627443,   0.020420784940626158,   0.024270734004424643,
        0.028444024175363736,   0.032937818974040578,   0.037749064082191974,
        0.042874489418636919,   0.048310611361867761,   0.054053735117779333,
        0.060099957230926537,   0.066445168237604324,   0.073085055458945558,
        0.0800151059321394,     0.087230609477777776,   0.094726661901244513,
        0.10249816832597219,    0.11053984665630023,    0.1188462311675812,
        0.12741167622109556,    0.13623036010124839,    0.14529628897244207,
        0.1546033009529344,     0.16414507030291248,    0.17391511172393842,
        0.18390678476684141,    0.19411329834506275,    0.20452771535038505,
        0.21514295736790834,    0.22595180948706928,    0.23694692520543287,
        0.24812083142192315,    0.2594659335161007,     0.27097452051003368,
        0.28263877030925277,    0.29445075501923162,    0.30640244633377467,
        0.31848572099165273,    0.330692366297779,      0.34301408570516734,
        0.35544250445388659,    0.36796917526317147,    0.38058558407282445,
        0.39328315583000739,    0.4060532603174864,     0.41888721801937223,
        0.43177630602036637,    0.444711763934505,      0.45768479985937188,
        0.47068659635173032,    0.48370831642051582,    0.49674110953311473,
        0.50977611763084718,    0.52280448114956313,    0.53581734504126477,
        0.54880586479265758,    0.56176121243654087,    0.57467458255195369,
        0.58753719824899564,    0.6003403171342564,     0.613075237252798,
        0.62573330300265362,    0.6383059110178203,     0.65078451601574772,
        0.66316063660535041,    0.67542586105159486,    0.68757185299274026,
        0.69959035710635376,    0.71147320472024334,    0.72321231936449548,
        0.73479972226084933,    0.746227537745667,      0.75748799862282434,
        0.76857345144287648,    0.7794763617049123,     0.79018931897756406,
        0.80070504193568981,    0.81101638330930492,    0.82111633474140033,
        0.83099803155134433,    0.84065475740063245,    0.85007994885781191,
        0.85926719985947919,    0.86821026606431939,    0.876903069097226,
        0.88533970068061818,    0.89351442665014691,    0.90142169085206181,
        0.90905611891958693,    0.91641252192574163,    0.9234858999101232,
        0.93027144527725147,    0.93676454606417159,    0.94296078907508607,
        0.94885596288089369,    0.9544460606815901,     0.95972728302958754,
        0.96469604041210411,    0.9693489556908641,     0.97368286639745261,
        0.97769482688276566,    0.98138211031909317,    0.98474221055347377,
        0.98777284381106445,    0.99047195024736334,    0.99283769534823429,
        0.9948684711767799,     0.9965628974662144,     0.99791982255799683,
        0.99893832418458384,    0.99961771009627132,    0.99995751853169934,
        0.99995751853169934,    0.99961771009627132,    0.99893832418458384,
        0.99791982255799683,    0.9965628974662144,     0.9948684711767799,
        0.99283769534823429,    0.99047195024736334,    0.98777284381106445,
        0.98474221055347377,    0.98138211031909317,    0.97769482688276566,
        0.97368286639745261,    0.9693489556908641,     0.96469604041210411,
        0.95972728302958754,    0.9544460606815901,     0.94885596288089369,
        0.94296078907508607,    0.93676454606417159,    0.93027144527725147,
        0.9234858999101232,     0.91641252192574163,    0.90905611891958693,
        0.90142169085206181,    0.89351442665014691,    0.88533970068061818,
        0.876903069097226,      0.86821026606431939,    0.85926719985947919,
        0.85007994885781191,    0.84065475740063245,    0.83099803155134433,
        0.82111633474140033,    0.81101638330930492,    0.80070504193568981,
        0.79018931897756406,    0.7794763617049123,     0.76857345144287648,
        0.75748799862282434,    0.746227537745667,      0.73479972226084933,
        0.72321231936449548,    0.71147320472024334,    0.69959035710635376,
        0.68757185299274026,    0.67542586105159486,    0.66316063660535041,
        0.65078451601574772,    0.6383059110178203,     0.62573330300265362,
        0.613075237252798,      0.6003403171342564,     0.58753719824899564,
        0.57467458255195369,    0.56176121243654087,    0.54880586479265758,
        0.53581734504126477,    0.52280448114956313,    0.50977611763084718,
        0.49674110953311473,    0.48370831642051582,    0.47068659635173032,
        0.45768479985937188,    0.444711763934505,      0.43177630602036637,
        0.41888721801937223,    0.4060532603174864,     0.39328315583000739,
        0.38058558407282445,    0.36796917526317147,    0.35544250445388659,
        0.34301408570516734,    0.330692366297779,      0.31848572099165273,
        0.30640244633377467,    0.29445075501923162,    0.28263877030925277,
        0.27097452051003368,    0.2594659335161007,     0.24812083142192315,
        0.23694692520543287,    0.22595180948706928,    0.21514295736790834,
        0.20452771535038505,    0.19411329834506275,    0.18390678476684141,
        0.17391511172393842,    0.16414507030291248,    0.1546033009529344,
        0.14529628897244207,    0.13623036010124839,    0.12741167622109556,
        0.1188462311675812,     0.11053984665630023,    0.10249816832597219,
        0.094726661901244513,   0.087230609477777776,   0.0800151059321394,
        0.073085055458945558,   0.066445168237604324,   0.060099957230926537,
        0.054053735117779333,   0.048310611361867761,   0.042874489418636919,
        0.037749064082191974,   0.032937818974040578,   0.028444024175363736,
        0.024270734004424643,   0.020420784940626158,   0.016896793696627443,
        0.013701155439831247,   0.010836042164448945,   0.0083034012152515824,
        0.0061049539640088413,  0.0042421946395164167,  0.0027163893120066285,
        0.0015285750326325953,  0.00067955912861095147, 0.00016991865450188826};
    array<creal_T, 2U> Y;
    array<creal_T, 2U> Yb;
    array<creal_T, 2U> c_y;
    array<creal_T, 2U> r;
    array<double, 2U> X;
    array<double, 2U> a;
    array<double, 2U> b_y;
    array<double, 2U> e;
    array<double, 2U> y;
    array<int, 2U> index_f2;
    array<int, 1U> r1;
    fftw_iodim howmany_iodims;
    fftw_iodim iodims;
    double Y_re;
    int acoef;
    int csz_idx_1;
    int i;
    int k;
    int xi;
    int xoffset;
    csz_idx_1 = static_cast<int>(
        floor((static_cast<double>(x.size(0)) - 240.0) / 120.0));
    y.set_size(240, csz_idx_1 + 1);
    xoffset = 240 * (csz_idx_1 + 1);
    for (i = 0; i < xoffset; i++) {
        y[i] = 0.0;
    }
    for (acoef = 0; acoef <= csz_idx_1; acoef++) {
        i = 120 * acoef;
        for (xi = 0; xi < 240; xi++) {
            y[xi + 240 * acoef] = x[xi + i];
        }
    }
    a.set_size(240, y.size(1));
    xoffset = 240 * y.size(1);
    for (i = 0; i < xoffset; i++) {
        a[i] = y[i];
    }
    csz_idx_1 = y.size(1);
    y.set_size(240, csz_idx_1);
    if (csz_idx_1 != 0) {
        acoef = (a.size(1) != 1);
        i = csz_idx_1 - 1;
        for (k = 0; k <= i; k++) {
            csz_idx_1 = acoef * k;
            for (xoffset = 0; xoffset < 240; xoffset++) {
                y[xoffset + 240 * k] =
                    a[xoffset + 240 * csz_idx_1] * b_dv[xoffset];
            }
        }
    }
    if (y.size(1) == 0) {
        Y.set_size(240, 0);
    } else {
        fftw_plan plan;
        iodims.n = 240;
        iodims.is = 1;
        iodims.os = 1;
        howmany_iodims.n = y.size(1);
        howmany_iodims.is = 240;
        howmany_iodims.os = 240;
        mylock();
        fftw_init_threads();
        fftw_plan_with_nthreads(8);
        myunlock();
        Y.set_size(240, y.size(1));
        mylock();
        plan = fftw_plan_guru_dft_r2c(1, &iodims, 1, &howmany_iodims,
                                      (double *)&y[0], (fftw_complex *)&Y[0],
                                      (unsigned int)FFTW_PRESERVE_INPUT |
                                          (unsigned int)FFTW_ESTIMATE);
        myunlock();
        fftw_execute(plan);
        mylock();
        fftw_destroy_plan(plan);
        myunlock();
        csz_idx_1 = y.size(1);
        index_f2.set_size(1, y.size(1));
        index_f2[0] = 1;
        acoef = 1;
        for (k = 2; k <= csz_idx_1; k++) {
            acoef++;
            index_f2[k - 1] = acoef;
        }
        acoef = 122;
        xoffset = index_f2.size(1);
        do {
            r1.set_size(index_f2.size(1));
            c_y.set_size(1, index_f2.size(1));
            for (i = 0; i < xoffset; i++) {
                xi = index_f2[i];
                r1[i] = xi - 1;
                c_y[i].re = Y[(240 * (xi - 1) - acoef) + 241].re;
                c_y[i].im = -Y[(240 * (xi - 1) - acoef) + 241].im;
            }
            csz_idx_1 = c_y.size(1);
            for (i = 0; i < csz_idx_1; i++) {
                Y[(acoef + 240 * r1[i]) - 1] = c_y[i];
            }
            acoef++;
        } while (!(acoef == 241));
    }
    xoffset = Y.size(1);
    Yb.set_size(121, Y.size(1));
    for (i = 0; i < xoffset; i++) {
        for (xi = 0; xi < 121; xi++) {
            double Y_im;
            double b_Y_re;
            Y_re = Y[xi + 240 * i].re;
            Y_im = -Y[xi + 240 * i].im;
            b_Y_re = Y[xi + 240 * i].re * Y_re - Y[xi + 240 * i].im * Y_im;
            Y_im = Y[xi + 240 * i].re * Y_im + Y[xi + 240 * i].im * Y_re;
            if (Y_im == 0.0) {
                Yb[xi + 121 * i].re = b_Y_re / 7260.125;
                Yb[xi + 121 * i].im = 0.0;
            } else if (b_Y_re == 0.0) {
                Yb[xi + 121 * i].re = 0.0;
                Yb[xi + 121 * i].im = Y_im / 7260.125;
            } else {
                Yb[xi + 121 * i].re = b_Y_re / 7260.125;
                Yb[xi + 121 * i].im = Y_im / 7260.125;
            }
        }
    }
    csz_idx_1 = Yb.size(1) - 1;
    r.set_size(1, Yb.size(1));
    for (i = 0; i <= csz_idx_1; i++) {
        r[i].re = 0.5 * Yb[121 * i].re;
        r[i].im = 0.5 * Yb[121 * i].im;
    }
    xoffset = r.size(1);
    for (i = 0; i < xoffset; i++) {
        Yb[121 * i] = r[i];
    }
    csz_idx_1 = Yb.size(1) - 1;
    r.set_size(1, Yb.size(1));
    for (i = 0; i <= csz_idx_1; i++) {
        r[i].re = 0.5 * Yb[121 * i + 120].re;
        r[i].im = 0.5 * Yb[121 * i + 120].im;
    }
    xoffset = r.size(1);
    for (i = 0; i < xoffset; i++) {
        Yb[121 * i + 120] = r[i];
    }
    X.set_size(121, Yb.size(1));
    xoffset = 121 * Yb.size(1);
    for (i = 0; i < xoffset; i++) {
        X[i] = Yb[i].re;
    }
    if (X.size(1) == 0) {
        e.set_size(1, 0);
    } else {
        csz_idx_1 = X.size(1);
        e.set_size(1, X.size(1));
        for (xi = 0; xi < csz_idx_1; xi++) {
            acoef = xi * 121;
            Y_re = X[acoef];
            for (k = 0; k < 120; k++) {
                Y_re += X[(acoef + k) + 1];
            }
            e[xi] = Y_re;
        }
    }
    b_y.set_size(121, e.size(1));
    csz_idx_1 = e.size(1);
    for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
        acoef = xoffset * 121;
        for (xi = 0; xi < 121; xi++) {
            b_y[acoef + xi] = e[xoffset];
        }
    }
    xoffset = 121 * X.size(1);
    X.set_size(121, X.size(1));
    for (i = 0; i < xoffset; i++) {
        X[i] = X[i] / b_y[i];
    }
    csz_idx_1 = 121 * X.size(1);
    b_y.set_size(121, X.size(1));
    for (k = 0; k < csz_idx_1; k++) {
        b_y[k] = internal::scalar::b_log2(X[k]);
    }
    xoffset = 121 * X.size(1);
    X.set_size(121, X.size(1));
    for (i = 0; i < xoffset; i++) {
        X[i] = X[i] * b_y[i];
    }
    if (X.size(1) == 0) {
        e.set_size(e.size(0), 0);
    } else {
        csz_idx_1 = X.size(1);
        e.set_size(1, X.size(1));
        for (xi = 0; xi < csz_idx_1; xi++) {
            acoef = xi * 121;
            if (rtIsNaN(X[acoef])) {
                e[xi] = 0.0;
            } else {
                e[xi] = X[acoef];
            }
            for (k = 0; k < 120; k++) {
                xoffset = (acoef + k) + 1;
                if (!rtIsNaN(X[xoffset])) {
                    e[xi] = e[xi] + X[xoffset];
                }
            }
        }
    }
    e.set_size(1, e.size(1));
    xoffset = e.size(1) - 1;
    for (i = 0; i <= xoffset; i++) {
        e[i] = -e[i] / 6.9188632372745946;
    }
    entropy.set_size(e.size(1));
    xoffset = e.size(1);
    for (i = 0; i < xoffset; i++) {
        entropy[i] = e[i];
    }
}

} // namespace coder
