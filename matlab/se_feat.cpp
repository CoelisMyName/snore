#include "se_feat.h"
#include "SnoringRecognition_data.h"
#include "blockedSummation.h"
#include "fft.h"
#include "log2.h"
#include "minOrMax.h"
#include "rt_nonfinite.h"
#include "spectralEntropy.h"
#include "vvarstd.h"
#include "coder_array.h"
#include "mylock.h"
#include "rt_nonfinite.h"
#include <math.h>

void se_feat(const coder::array<double, 1U> &sig, double fs, double *SE_mean,
             double *SE_max, double *SE_min, double *SE_var)
{
    static const double dv2[441] = {5.051820295032261E-5,
                                    0.00020206260344590721,
                                    0.000454602578483676,
                                    0.00080808709660079581,
                                    0.0012624447281867623,
                                    0.0018175836599173545,
                                    0.0024733917133077377,
                                    0.003229736367380498,
                                    0.0040864647854447766,
                                    0.0050434038459801211,
                                    0.0061003601776199456,
                                    0.007257120198226219,
                                    0.0085134501580491073,
                                    0.0098690961869610239,
                                    0.011323784345757149,
                                    0.012877220681510926,
                                    0.014529091286973994,
                                    0.01627906236400839,
                                    0.018126780291038036,
                                    0.020071871694505972,
                                    0.022113943524323165,
                                    0.024252583133292926,
                                    0.026487358360496149,
                                    0.0288178176186189,
                                    0.031243489985206097,
                                    0.033763885297822094,
                                    0.036378494253099247,
                                    0.039086788509654191,
                                    0.041888220794851383,
                                    0.044782225015391752,
                                    0.0477682163717052,
                                    0.050845591476122332,
                                    0.054013728474802791,
                                    0.057271987173395045,
                                    0.060619709166402358,
                                    0.06405621797022848,
                                    0.067580819159876626,
                                    0.071192800509273957,
                                    0.074891432135192892,
                                    0.078675966644741135,
                                    0.082545639286388917,
                                    0.086499668104504768,
                                    0.090537254097367459,
                                    0.094657581378622568,
                                    0.098859817342150824,
                                    0.10314311283031524,
                                    0.1075066023055527,
                                    0.11194940402527565,
                                    0.11647062022004839,
                                    0.12106933727500169,
                                    0.1257446259144494,
                                    0.13049554138967046,
                                    0.13532112366981591,
                                    0.14022039763590594,
                                    0.14519237327787443,
                                    0.15023604589462314,
                                    0.15535039629704467,
                                    0.16053439101397265,
                                    0.1657869825010182,
                                    0.17110710935225037,
                                    0.17649369651467722,
                                    0.18194565550548469,
                                    0.18746188463198982,
                                    0.1930412692142624,
                                    0.19868268181037174,
                                    0.20438498244421216,
                                    0.21014701883586073,
                                    0.21596762663442209,
                                    0.221845629653312,
                                    0.22777984010793267,
                                    0.23376905885569177,
                                    0.23981207563831625,
                                    0.24590766932641334,
                                    0.25205460816622682,
                                    0.25825165002854111,
                                    0.26449754265968262,
                                    0.270791023934565,
                                    0.27713082211173085,
                                    0.28351565609033652,
                                    0.28994423566902683,
                                    0.29641526180665073,
                                    0.30292742688476104,
                                    0.30947941497184983,
                                    0.31606990208926111,
                                    0.32269755647873222,
                                    0.32936103887150475,
                                    0.33605900275895551,
                                    0.34279009466468807,
                                    0.349552954418035,
                                    0.35634621542890965,
                                    0.36316850496395847,
                                    0.37001844442395232,
                                    0.37689464962236363,
                                    0.3837957310650737,
                                    0.39072029423115051,
                                    0.397666939854645,
                                    0.40463426420734316,
                                    0.41162085938242254,
                                    0.41862531357895111,
                                    0.42564621138717423,
                                    0.43268213407453032,
                                    0.43973165987233837,
                                    0.44679336426309879,
                                    0.453865820268349,
                                    0.46094759873701774,
                                    0.46803726863421719,
                                    0.47513339733041665,
                                    0.48223455089093736,
                                    0.48933929436571261,
                                    0.49644619207925117,
                                    0.50355380792074889,
                                    0.51066070563428734,
                                    0.51776544910906241,
                                    0.52486660266958329,
                                    0.53196273136578276,
                                    0.53905240126298226,
                                    0.5461341797316509,
                                    0.55320663573690121,
                                    0.56026834012766147,
                                    0.56731786592546962,
                                    0.57435378861282582,
                                    0.581374686421049,
                                    0.58837914061757735,
                                    0.59536573579265661,
                                    0.60233306014535493,
                                    0.60927970576884938,
                                    0.61620426893492641,
                                    0.62310535037763626,
                                    0.62998155557604762,
                                    0.63683149503604131,
                                    0.64365378457109035,
                                    0.65044704558196509,
                                    0.65720990533531187,
                                    0.66394099724104449,
                                    0.67063896112849508,
                                    0.67730244352126778,
                                    0.68393009791073878,
                                    0.69052058502815017,
                                    0.69707257311523874,
                                    0.70358473819334921,
                                    0.710055764330973,
                                    0.71648434390966353,
                                    0.7228691778882691,
                                    0.729208976065435,
                                    0.73550245734031727,
                                    0.74174834997145878,
                                    0.74794539183377318,
                                    0.75409233067358672,
                                    0.7601879243616837,
                                    0.76623094114430823,
                                    0.77222015989206716,
                                    0.778154370346688,
                                    0.78403237336557785,
                                    0.78985298116413927,
                                    0.79561501755578778,
                                    0.80131731818962815,
                                    0.80695873078573754,
                                    0.81253811536801024,
                                    0.8180543444945152,
                                    0.82350630348532272,
                                    0.82889289064774963,
                                    0.83421301749898169,
                                    0.83946560898602729,
                                    0.84464960370295517,
                                    0.84976395410537664,
                                    0.85480762672212562,
                                    0.859779602364094,
                                    0.864678876330184,
                                    0.86950445861032954,
                                    0.87425537408555054,
                                    0.87893066272499831,
                                    0.8835293797799515,
                                    0.88805059597472424,
                                    0.89249339769444735,
                                    0.8968568871696847,
                                    0.90114018265784912,
                                    0.90534241862137743,
                                    0.90946274590263254,
                                    0.91350033189549529,
                                    0.91745436071361108,
                                    0.92132403335525881,
                                    0.925108567864807,
                                    0.9288071994907261,
                                    0.93241918084012332,
                                    0.93594378202977135,
                                    0.93938029083359753,
                                    0.942728012826605,
                                    0.94598627152519721,
                                    0.94915440852387767,
                                    0.95223178362829475,
                                    0.95521777498460814,
                                    0.95811177920514856,
                                    0.96091321149034581,
                                    0.96362150574690064,
                                    0.96623611470217785,
                                    0.9687565100147939,
                                    0.9711821823813811,
                                    0.97351264163950391,
                                    0.97574741686670707,
                                    0.97788605647567683,
                                    0.979928128305494,
                                    0.98187321970896191,
                                    0.98372093763599155,
                                    0.985470908713026,
                                    0.98712277931848913,
                                    0.9886762156542428,
                                    0.99013090381303892,
                                    0.991486549841951,
                                    0.99274287980177378,
                                    0.99389963982238,
                                    0.99495659615401988,
                                    0.99591353521455517,
                                    0.99677026363261945,
                                    0.99752660828669226,
                                    0.99818241634008265,
                                    0.99873755527181318,
                                    0.99919191290339915,
                                    0.99954539742151627,
                                    0.99979793739655409,
                                    0.99994948179704968,
                                    1.0,
                                    0.99994948179704968,
                                    0.99979793739655409,
                                    0.99954539742151627,
                                    0.99919191290339915,
                                    0.99873755527181318,
                                    0.99818241634008265,
                                    0.99752660828669226,
                                    0.99677026363261945,
                                    0.99591353521455517,
                                    0.99495659615401988,
                                    0.99389963982238,
                                    0.99274287980177378,
                                    0.991486549841951,
                                    0.99013090381303892,
                                    0.9886762156542428,
                                    0.98712277931848913,
                                    0.985470908713026,
                                    0.98372093763599155,
                                    0.98187321970896191,
                                    0.979928128305494,
                                    0.97788605647567683,
                                    0.97574741686670707,
                                    0.97351264163950391,
                                    0.9711821823813811,
                                    0.9687565100147939,
                                    0.96623611470217785,
                                    0.96362150574690064,
                                    0.96091321149034581,
                                    0.95811177920514856,
                                    0.95521777498460814,
                                    0.95223178362829475,
                                    0.94915440852387767,
                                    0.94598627152519721,
                                    0.942728012826605,
                                    0.93938029083359753,
                                    0.93594378202977135,
                                    0.93241918084012332,
                                    0.9288071994907261,
                                    0.925108567864807,
                                    0.92132403335525881,
                                    0.91745436071361108,
                                    0.91350033189549529,
                                    0.90946274590263254,
                                    0.90534241862137743,
                                    0.90114018265784912,
                                    0.8968568871696847,
                                    0.89249339769444735,
                                    0.88805059597472424,
                                    0.8835293797799515,
                                    0.87893066272499831,
                                    0.87425537408555054,
                                    0.86950445861032954,
                                    0.864678876330184,
                                    0.859779602364094,
                                    0.85480762672212562,
                                    0.84976395410537664,
                                    0.84464960370295517,
                                    0.83946560898602729,
                                    0.83421301749898169,
                                    0.82889289064774963,
                                    0.82350630348532272,
                                    0.8180543444945152,
                                    0.81253811536801024,
                                    0.80695873078573754,
                                    0.80131731818962815,
                                    0.79561501755578778,
                                    0.78985298116413927,
                                    0.78403237336557785,
                                    0.778154370346688,
                                    0.77222015989206716,
                                    0.76623094114430823,
                                    0.7601879243616837,
                                    0.75409233067358672,
                                    0.74794539183377318,
                                    0.74174834997145878,
                                    0.73550245734031727,
                                    0.729208976065435,
                                    0.7228691778882691,
                                    0.71648434390966353,
                                    0.710055764330973,
                                    0.70358473819334921,
                                    0.69707257311523874,
                                    0.69052058502815017,
                                    0.68393009791073878,
                                    0.67730244352126778,
                                    0.67063896112849508,
                                    0.66394099724104449,
                                    0.65720990533531187,
                                    0.65044704558196509,
                                    0.64365378457109035,
                                    0.63683149503604131,
                                    0.62998155557604762,
                                    0.62310535037763626,
                                    0.61620426893492641,
                                    0.60927970576884938,
                                    0.60233306014535493,
                                    0.59536573579265661,
                                    0.58837914061757735,
                                    0.581374686421049,
                                    0.57435378861282582,
                                    0.56731786592546962,
                                    0.56026834012766147,
                                    0.55320663573690121,
                                    0.5461341797316509,
                                    0.53905240126298226,
                                    0.53196273136578276,
                                    0.52486660266958329,
                                    0.51776544910906241,
                                    0.51066070563428734,
                                    0.50355380792074889,
                                    0.49644619207925117,
                                    0.48933929436571261,
                                    0.48223455089093736,
                                    0.47513339733041665,
                                    0.46803726863421719,
                                    0.46094759873701774,
                                    0.453865820268349,
                                    0.44679336426309879,
                                    0.43973165987233837,
                                    0.43268213407453032,
                                    0.42564621138717423,
                                    0.41862531357895111,
                                    0.41162085938242254,
                                    0.40463426420734316,
                                    0.397666939854645,
                                    0.39072029423115051,
                                    0.3837957310650737,
                                    0.37689464962236363,
                                    0.37001844442395232,
                                    0.36316850496395847,
                                    0.35634621542890965,
                                    0.349552954418035,
                                    0.34279009466468807,
                                    0.33605900275895551,
                                    0.32936103887150475,
                                    0.32269755647873222,
                                    0.31606990208926111,
                                    0.30947941497184983,
                                    0.30292742688476104,
                                    0.29641526180665073,
                                    0.28994423566902683,
                                    0.28351565609033652,
                                    0.27713082211173085,
                                    0.270791023934565,
                                    0.26449754265968262,
                                    0.25825165002854111,
                                    0.25205460816622682,
                                    0.24590766932641334,
                                    0.23981207563831625,
                                    0.23376905885569177,
                                    0.22777984010793267,
                                    0.221845629653312,
                                    0.21596762663442209,
                                    0.21014701883586073,
                                    0.20438498244421216,
                                    0.19868268181037174,
                                    0.1930412692142624,
                                    0.18746188463198982,
                                    0.18194565550548469,
                                    0.17649369651467722,
                                    0.17110710935225037,
                                    0.1657869825010182,
                                    0.16053439101397265,
                                    0.15535039629704467,
                                    0.15023604589462314,
                                    0.14519237327787443,
                                    0.14022039763590594,
                                    0.13532112366981591,
                                    0.13049554138967046,
                                    0.1257446259144494,
                                    0.12106933727500169,
                                    0.11647062022004839,
                                    0.11194940402527565,
                                    0.1075066023055527,
                                    0.10314311283031524,
                                    0.098859817342150824,
                                    0.094657581378622568,
                                    0.090537254097367459,
                                    0.086499668104504768,
                                    0.082545639286388917,
                                    0.078675966644741135,
                                    0.074891432135192892,
                                    0.071192800509273957,
                                    0.067580819159876626,
                                    0.06405621797022848,
                                    0.060619709166402358,
                                    0.057271987173395045,
                                    0.054013728474802791,
                                    0.050845591476122332,
                                    0.0477682163717052,
                                    0.044782225015391752,
                                    0.041888220794851383,
                                    0.039086788509654191,
                                    0.036378494253099247,
                                    0.033763885297822094,
                                    0.031243489985206097,
                                    0.0288178176186189,
                                    0.026487358360496149,
                                    0.024252583133292926,
                                    0.022113943524323165,
                                    0.020071871694505972,
                                    0.018126780291038036,
                                    0.01627906236400839,
                                    0.014529091286973994,
                                    0.012877220681510926,
                                    0.011323784345757149,
                                    0.0098690961869610239,
                                    0.0085134501580491073,
                                    0.007257120198226219,
                                    0.0061003601776199456,
                                    0.0050434038459801211,
                                    0.0040864647854447766,
                                    0.003229736367380498,
                                    0.0024733917133077377,
                                    0.0018175836599173545,
                                    0.0012624447281867623,
                                    0.00080808709660079581,
                                    0.000454602578483676,
                                    0.00020206260344590721,
                                    5.051820295032261E-5};
    static const double dv1[221] = {
        0.000200246440839158,   0.00080082536880843325, 0.0018012557287367392,
        0.0032007361901485454,  0.0049981457891181136,  0.0071920448261457715,
        0.0097806760193366316,  0.012761965911958384,   0.016133526533250564,
        0.019892657311155248,   0.024036347235436739,   0.028561277269457896,
        0.033463823008681337,   0.038740057583765641,   0.044385754805932154,
        0.050396392552081615,   0.056767156386950679,   0.063492943419405923,
        0.070568366389786974,   0.07798775798502483,    0.085745175378078908,
        0.093834404988057007,   0.10224896745720502,    0.11098212284078024,
        0.12002687600565126,    0.12937598223329994,    0.13902195302273773,
        0.14895706208868875,    0.1591733515502336,     0.16966263830495926,
        0.18041652058350749,    0.19142638467927242,    0.20268341184785665,
        0.21417858537076068,    0.2259026977776451,     0.23784635822138417,
        0.24999999999999994,    0.26235388821945504,    0.27489812759116339,
        0.28762267035797606,    0.30051732434229178,    0.31357176110984569,
        0.32677552424263812,    0.34011803771437732,    0.35358861436172478,
        0.36717646444456176,    0.38087070428841752,    0.3946603650021368,
        0.40853440126380652,    0.4224817001679011,     0.43649109012656057,
        0.4505513498178752,     0.46465121717400265,    0.47877939840192579,
        0.492924577029619,      0.507075422970381,      0.521220601598074,
        0.5353487828259974,     0.54944865018212485,    0.56350890987343927,
        0.5775182998320989,     0.59146559873619331,    0.60533963499786314,
        0.61912929571158248,    0.63282353555543813,    0.64641138563827516,
        0.65988196228562268,    0.67322447575736177,    0.68642823889015425,
        0.69948267565770816,    0.71237732964202394,    0.72510187240883672,
        0.73764611178054484,    0.74999999999999989,    0.76215364177861578,
        0.77409730222235484,    0.78582141462923927,    0.79731658815214335,
        0.80857361532072769,    0.81958347941649234,    0.83033736169504069,
        0.8408266484497664,     0.85104293791131136,    0.86097804697726221,
        0.87062401776670018,    0.87997312399434868,    0.88901787715921965,
        0.89775103254279487,    0.906165595011943,      0.91425482462192109,
        0.92201224201497523,    0.92943163361021286,    0.936507056580594,
        0.94323284361304938,    0.94960360744791839,    0.95561424519406779,
        0.96125994241623425,    0.96653617699131855,    0.9714387227305421,
        0.97596365276456321,    0.9801073426888447,     0.98386647346674938,
        0.98723803408804156,    0.99021932398066337,    0.99280795517385423,
        0.99500185421088183,    0.99679926380985151,    0.99819874427126321,
        0.99919917463119146,    0.99979975355916084,    1.0,
        0.99979975355916084,    0.99919917463119146,    0.99819874427126321,
        0.99679926380985151,    0.99500185421088183,    0.99280795517385423,
        0.99021932398066337,    0.98723803408804156,    0.98386647346674938,
        0.9801073426888447,     0.97596365276456321,    0.9714387227305421,
        0.96653617699131855,    0.96125994241623425,    0.95561424519406779,
        0.94960360744791839,    0.94323284361304938,    0.936507056580594,
        0.92943163361021286,    0.92201224201497523,    0.91425482462192109,
        0.906165595011943,      0.89775103254279487,    0.88901787715921965,
        0.87997312399434868,    0.87062401776670018,    0.86097804697726221,
        0.85104293791131136,    0.8408266484497664,     0.83033736169504069,
        0.81958347941649234,    0.80857361532072769,    0.79731658815214335,
        0.78582141462923927,    0.77409730222235484,    0.76215364177861578,
        0.74999999999999989,    0.73764611178054484,    0.72510187240883672,
        0.71237732964202394,    0.69948267565770816,    0.68642823889015425,
        0.67322447575736177,    0.65988196228562268,    0.64641138563827516,
        0.63282353555543813,    0.61912929571158248,    0.60533963499786314,
        0.59146559873619331,    0.5775182998320989,     0.56350890987343927,
        0.54944865018212485,    0.5353487828259974,     0.521220601598074,
        0.507075422970381,      0.492924577029619,      0.47877939840192579,
        0.46465121717400265,    0.4505513498178752,     0.43649109012656057,
        0.4224817001679011,     0.40853440126380652,    0.3946603650021368,
        0.38087070428841752,    0.36717646444456176,    0.35358861436172478,
        0.34011803771437732,    0.32677552424263812,    0.31357176110984569,
        0.30051732434229178,    0.28762267035797606,    0.27489812759116339,
        0.26235388821945504,    0.24999999999999994,    0.23784635822138417,
        0.2259026977776451,     0.21417858537076068,    0.20268341184785665,
        0.19142638467927242,    0.18041652058350749,    0.16966263830495926,
        0.1591733515502336,     0.14895706208868875,    0.13902195302273773,
        0.12937598223329994,    0.12002687600565126,    0.11098212284078024,
        0.10224896745720502,    0.093834404988057007,   0.085745175378078908,
        0.07798775798502483,    0.070568366389786974,   0.063492943419405923,
        0.056767156386950679,   0.050396392552081615,   0.044385754805932154,
        0.038740057583765641,   0.033463823008681337,   0.028561277269457896,
        0.024036347235436739,   0.019892657311155248,   0.016133526533250564,
        0.012761965911958384,   0.0097806760193366316,  0.0071920448261457715,
        0.0049981457891181136,  0.0032007361901485454,  0.0018012557287367392,
        0.00080082536880843325, 0.000200246440839158};
    static const double b_dv[160] = {
        0.00038070876216506067, 0.0015222552920138854, 0.0034229012024811212,
        0.0060797521233592611,  0.009488762108946891,  0.013644739799356709,
        0.018541356326100322,   0.024171154949911011,  0.030525562416127472,
        0.037594902010346765,   0.045368408294463813,  0.053834243500658241,
        0.0629795155583619,     0.072790297726755715,  0.083251649802898953,
        0.0943476408731937,     0.1060613735735384,    0.1183750098212264,
        0.13126979797940325,    0.14472610141271669,   0.158723428390673,
        0.17324046329316251,    0.1882550990706332,    0.20374447090948028,
        0.21968499105138578,    0.23605238471358375,   0.25282172705535011,
        0.26996748113442393,    0.28746353679555792,   0.30528325043197768,
        0.32339948555920106,    0.34178465413942621,   0.36041075859356375,
        0.379249434436931,      0.39827199347368303,   0.41744946748420386,
        0.43675265233892524,    0.45615215247139967,   0.47561842564289897,
        0.49512182793037091,    0.5146326588692437,    0.53412120668233554,
        0.55355779352598866,    0.57291282068453164,   0.59215681364423955,
        0.61126046697815717,    0.63019468897343023,   0.64893064593318484,
        0.66743980608549291,    0.68569398303255336,   0.70366537867392631,
        0.72132662553845606,    0.73865082846041386,   0.75561160553640061,
        0.77218312830063229,    0.78834016105743354,   0.80405809931104022,
        0.81931300723418732,    0.83408165411842483,   0.84834154975065634,
        0.86207097866202309,    0.87524903319698066,   0.88785564535221,
        0.899871617336876,      0.9112786508076971,    0.92205937473430266,
        0.93219737185244722,    0.9416772036647959,    0.95048443395120952,
        0.95860565075272641,    0.96602848679576359,   0.97274163832543392,
        0.97873488231930117,    0.98399909205535652,   0.98852625101051017,
        0.99230946506843454,    0.99534297301816532,   0.99762215532747667,
        0.99914354117766535,    0.99990481374903628,   0.99990481374903628,
        0.99914354117766535,    0.99762215532747667,   0.99534297301816532,
        0.99230946506843454,    0.98852625101051017,   0.98399909205535652,
        0.97873488231930117,    0.97274163832543392,   0.96602848679576359,
        0.95860565075272641,    0.95048443395120952,   0.9416772036647959,
        0.93219737185244722,    0.92205937473430266,   0.9112786508076971,
        0.899871617336876,      0.88785564535221,      0.87524903319698066,
        0.86207097866202309,    0.84834154975065634,   0.83408165411842483,
        0.81931300723418732,    0.80405809931104022,   0.78834016105743354,
        0.77218312830063229,    0.75561160553640061,   0.73865082846041386,
        0.72132662553845606,    0.70366537867392631,   0.68569398303255336,
        0.66743980608549291,    0.64893064593318484,   0.63019468897343023,
        0.61126046697815717,    0.59215681364423955,   0.57291282068453164,
        0.55355779352598866,    0.53412120668233554,   0.5146326588692437,
        0.49512182793037091,    0.47561842564289897,   0.45615215247139967,
        0.43675265233892524,    0.41744946748420386,   0.39827199347368303,
        0.379249434436931,      0.36041075859356375,   0.34178465413942621,
        0.32339948555920106,    0.30528325043197768,   0.28746353679555792,
        0.26996748113442393,    0.25282172705535011,   0.23605238471358375,
        0.21968499105138578,    0.20374447090948028,   0.1882550990706332,
        0.17324046329316251,    0.158723428390673,     0.14472610141271669,
        0.13126979797940325,    0.1183750098212264,    0.1060613735735384,
        0.0943476408731937,     0.083251649802898953,  0.072790297726755715,
        0.0629795155583619,     0.053834243500658241,  0.045368408294463813,
        0.037594902010346765,   0.030525562416127472,  0.024171154949911011,
        0.018541356326100322,   0.013644739799356709,  0.009488762108946891,
        0.0060797521233592611,  0.0034229012024811212, 0.0015222552920138854,
        0.00038070876216506067};
    coder::array<creal_T, 2U> Y;
    coder::array<creal_T, 2U> Yb;
    coder::array<creal_T, 2U> r;
    coder::array<double, 2U> SE;
    coder::array<double, 2U> X;
    coder::array<double, 2U> a;
    coder::array<double, 2U> b_a;
    coder::array<double, 2U> b_y;
    coder::array<double, 2U> e;
    coder::array<double, 2U> y;
    coder::array<double, 1U> b_SE;
    double inc;
    double wlen;
    double x;
    int csz_idx_1;
    int xoffset;
    wlen = 0.02 * fs;
    if (wlen < 0.0) {
        wlen = ceil(wlen);
    } else {
        wlen = floor(wlen);
    }
    inc = 0.5 * wlen;
    if (inc < 0.0) {
        inc = ceil(inc);
    } else {
        inc = floor(inc);
    }
    x = ceil(static_cast<double>(sig.size(0)) / inc);
    csz_idx_1 = static_cast<int>(x);
    SE.set_size(1, csz_idx_1);
    for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
        SE[xoffset] = 0.0;
    }
    switch (static_cast<int>(fs)) {
    case 8000: {
        int acoef;
        int b_k;
        int k;
        acoef = static_cast<int>(
            floor((static_cast<double>(sig.size(0)) - 160.0) / 80.0));
        y.set_size(160, acoef + 1);
        csz_idx_1 = 160 * (acoef + 1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            y[xoffset] = 0.0;
        }
        for (csz_idx_1 = 0; csz_idx_1 <= acoef; csz_idx_1++) {
            xoffset = 80 * csz_idx_1;
            for (k = 0; k < 160; k++) {
                y[k + 160 * csz_idx_1] = sig[k + xoffset];
            }
        }
        a.set_size(160, y.size(1));
        csz_idx_1 = 160 * y.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            a[xoffset] = y[xoffset];
        }
        csz_idx_1 = y.size(1);
        y.set_size(160, csz_idx_1);
        if (csz_idx_1 != 0) {
            acoef = (a.size(1) != 1);
            xoffset = csz_idx_1 - 1;
            for (b_k = 0; b_k <= xoffset; b_k++) {
                csz_idx_1 = acoef * b_k;
                for (k = 0; k < 160; k++) {
                    y[k + 160 * b_k] = a[k + 160 * csz_idx_1] * b_dv[k];
                }
            }
        }
        coder::fft(y, Y);
        csz_idx_1 = Y.size(1);
        Yb.set_size(81, Y.size(1));
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            for (k = 0; k < 81; k++) {
                double Y_im;
                double Y_re;
                x = Y[k + 160 * xoffset].re;
                Y_im = -Y[k + 160 * xoffset].im;
                Y_re = Y[k + 160 * xoffset].re * x -
                       Y[k + 160 * xoffset].im * Y_im;
                Y_im = Y[k + 160 * xoffset].re * Y_im +
                       Y[k + 160 * xoffset].im * x;
                if (Y_im == 0.0) {
                    Yb[k + 81 * xoffset].re = Y_re / 3240.1250000000023;
                    Yb[k + 81 * xoffset].im = 0.0;
                } else if (Y_re == 0.0) {
                    Yb[k + 81 * xoffset].re = 0.0;
                    Yb[k + 81 * xoffset].im = Y_im / 3240.1250000000023;
                } else {
                    Yb[k + 81 * xoffset].re = Y_re / 3240.1250000000023;
                    Yb[k + 81 * xoffset].im = Y_im / 3240.1250000000023;
                }
            }
        }
        csz_idx_1 = Yb.size(1) - 1;
        r.set_size(1, Yb.size(1));
        for (xoffset = 0; xoffset <= csz_idx_1; xoffset++) {
            r[xoffset].re = 0.5 * Yb[81 * xoffset].re;
            r[xoffset].im = 0.5 * Yb[81 * xoffset].im;
        }
        csz_idx_1 = r.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            Yb[81 * xoffset] = r[xoffset];
        }
        csz_idx_1 = Yb.size(1) - 1;
        r.set_size(1, Yb.size(1));
        for (xoffset = 0; xoffset <= csz_idx_1; xoffset++) {
            r[xoffset].re = 0.5 * Yb[81 * xoffset + 80].re;
            r[xoffset].im = 0.5 * Yb[81 * xoffset + 80].im;
        }
        csz_idx_1 = r.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            Yb[81 * xoffset + 80] = r[xoffset];
        }
        X.set_size(81, Yb.size(1));
        csz_idx_1 = 81 * Yb.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            X[xoffset] = Yb[xoffset].re;
        }
        if (X.size(1) == 0) {
            e.set_size(1, 0);
        } else {
            csz_idx_1 = X.size(1);
            e.set_size(1, X.size(1));
            for (k = 0; k < csz_idx_1; k++) {
                acoef = k * 81;
                x = X[acoef];
                for (b_k = 0; b_k < 80; b_k++) {
                    x += X[(acoef + b_k) + 1];
                }
                e[k] = x;
            }
        }
        b_y.set_size(81, e.size(1));
        csz_idx_1 = e.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            acoef = xoffset * 81;
            for (k = 0; k < 81; k++) {
                b_y[acoef + k] = e[xoffset];
            }
        }
        csz_idx_1 = 81 * X.size(1);
        X.set_size(81, X.size(1));
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            X[xoffset] = X[xoffset] / b_y[xoffset];
        }
        csz_idx_1 = 81 * X.size(1);
        b_y.set_size(81, X.size(1));
        for (b_k = 0; b_k < csz_idx_1; b_k++) {
            b_y[b_k] = coder::internal::scalar::b_log2(X[b_k]);
        }
        csz_idx_1 = 81 * X.size(1);
        X.set_size(81, X.size(1));
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            X[xoffset] = X[xoffset] * b_y[xoffset];
        }
        if (X.size(1) == 0) {
            e.set_size(e.size(0), 0);
        } else {
            csz_idx_1 = X.size(1);
            e.set_size(1, X.size(1));
            for (k = 0; k < csz_idx_1; k++) {
                acoef = k * 81;
                if (rtIsNaN(X[acoef])) {
                    e[k] = 0.0;
                } else {
                    e[k] = X[acoef];
                }
                for (b_k = 0; b_k < 80; b_k++) {
                    xoffset = (acoef + b_k) + 1;
                    if (!rtIsNaN(X[xoffset])) {
                        e[k] = e[k] + X[xoffset];
                    }
                }
            }
        }
        e.set_size(1, e.size(1));
        csz_idx_1 = e.size(1) - 1;
        for (xoffset = 0; xoffset <= csz_idx_1; xoffset++) {
            e[xoffset] = -e[xoffset] / 6.3398500028846243;
        }
        SE.set_size(e.size(1), 1);
        csz_idx_1 = e.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            SE[xoffset] = e[xoffset];
        }
    } break;
    case 11025: {
        int acoef;
        int b_k;
        int k;
        acoef = static_cast<int>(
            floor((static_cast<double>(sig.size(0)) - 221.0) / 111.0));
        y.set_size(221, acoef + 1);
        csz_idx_1 = 221 * (acoef + 1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            y[xoffset] = 0.0;
        }
        for (csz_idx_1 = 0; csz_idx_1 <= acoef; csz_idx_1++) {
            xoffset = 111 * csz_idx_1;
            for (k = 0; k < 221; k++) {
                y[k + 221 * csz_idx_1] = sig[k + xoffset];
            }
        }
        a.set_size(221, y.size(1));
        csz_idx_1 = 221 * y.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            a[xoffset] = y[xoffset];
        }
        csz_idx_1 = y.size(1);
        y.set_size(221, csz_idx_1);
        if (csz_idx_1 != 0) {
            acoef = (a.size(1) != 1);
            xoffset = csz_idx_1 - 1;
            for (b_k = 0; b_k <= xoffset; b_k++) {
                csz_idx_1 = acoef * b_k;
                for (k = 0; k < 221; k++) {
                    y[k + 221 * b_k] = a[k + 221 * csz_idx_1] * dv1[k];
                }
            }
        }
        coder::b_fft(y, Y);
        csz_idx_1 = Y.size(1);
        Yb.set_size(111, Y.size(1));
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            for (k = 0; k < 111; k++) {
                double Y_im;
                double Y_re;
                x = Y[k + 221 * xoffset].re;
                Y_im = -Y[k + 221 * xoffset].im;
                Y_re = Y[k + 221 * xoffset].re * x -
                       Y[k + 221 * xoffset].im * Y_im;
                Y_im = Y[k + 221 * xoffset].re * Y_im +
                       Y[k + 221 * xoffset].im * x;
                if (Y_im == 0.0) {
                    Yb[k + 111 * xoffset].re = Y_re / 6160.5;
                    Yb[k + 111 * xoffset].im = 0.0;
                } else if (Y_re == 0.0) {
                    Yb[k + 111 * xoffset].re = 0.0;
                    Yb[k + 111 * xoffset].im = Y_im / 6160.5;
                } else {
                    Yb[k + 111 * xoffset].re = Y_re / 6160.5;
                    Yb[k + 111 * xoffset].im = Y_im / 6160.5;
                }
            }
        }
        csz_idx_1 = Yb.size(1) - 1;
        r.set_size(1, Yb.size(1));
        for (xoffset = 0; xoffset <= csz_idx_1; xoffset++) {
            r[xoffset].re = 0.5 * Yb[111 * xoffset].re;
            r[xoffset].im = 0.5 * Yb[111 * xoffset].im;
        }
        csz_idx_1 = r.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            Yb[111 * xoffset] = r[xoffset];
        }
        X.set_size(111, Yb.size(1));
        csz_idx_1 = 111 * Yb.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            X[xoffset] = Yb[xoffset].re;
        }
        if (X.size(1) == 0) {
            e.set_size(1, 0);
        } else {
            csz_idx_1 = X.size(1);
            e.set_size(1, X.size(1));
            for (k = 0; k < csz_idx_1; k++) {
                acoef = k * 111;
                x = X[acoef];
                for (b_k = 0; b_k < 110; b_k++) {
                    x += X[(acoef + b_k) + 1];
                }
                e[k] = x;
            }
        }
        b_y.set_size(111, e.size(1));
        csz_idx_1 = e.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            acoef = xoffset * 111;
            for (k = 0; k < 111; k++) {
                b_y[acoef + k] = e[xoffset];
            }
        }
        csz_idx_1 = 111 * X.size(1);
        X.set_size(111, X.size(1));
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            X[xoffset] = X[xoffset] / b_y[xoffset];
        }
        csz_idx_1 = 111 * X.size(1);
        b_y.set_size(111, X.size(1));
        for (b_k = 0; b_k < csz_idx_1; b_k++) {
            b_y[b_k] = coder::internal::scalar::b_log2(X[b_k]);
        }
        csz_idx_1 = 111 * X.size(1);
        X.set_size(111, X.size(1));
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            X[xoffset] = X[xoffset] * b_y[xoffset];
        }
        if (X.size(1) == 0) {
            e.set_size(e.size(0), 0);
        } else {
            csz_idx_1 = X.size(1);
            e.set_size(1, X.size(1));
            for (k = 0; k < csz_idx_1; k++) {
                acoef = k * 111;
                if (rtIsNaN(X[acoef])) {
                    e[k] = 0.0;
                } else {
                    e[k] = X[acoef];
                }
                for (b_k = 0; b_k < 110; b_k++) {
                    xoffset = (acoef + b_k) + 1;
                    if (!rtIsNaN(X[xoffset])) {
                        e[k] = e[k] + X[xoffset];
                    }
                }
            }
        }
        e.set_size(1, e.size(1));
        csz_idx_1 = e.size(1) - 1;
        for (xoffset = 0; xoffset <= csz_idx_1; xoffset++) {
            e[xoffset] = -e[xoffset] / 6.7944158663501062;
        }
        SE.set_size(e.size(1), 1);
        csz_idx_1 = e.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            SE[xoffset] = e[xoffset];
        }
    } break;
    case 12000:
        coder::spectralEntropy(sig, b_SE);
        SE.set_size(b_SE.size(0), 1);
        csz_idx_1 = b_SE.size(0);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            SE[xoffset] = b_SE[xoffset];
        }
        break;
    case 22050: {
        int acoef;
        int b_k;
        int k;
        acoef = static_cast<int>(
            floor((static_cast<double>(sig.size(0)) - 441.0) / 220.0));
        b_y.set_size(441, acoef + 1);
        csz_idx_1 = 441 * (acoef + 1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            b_y[xoffset] = 0.0;
        }
        for (csz_idx_1 = 0; csz_idx_1 <= acoef; csz_idx_1++) {
            xoffset = 220 * csz_idx_1;
            for (k = 0; k < 441; k++) {
                b_y[k + 441 * csz_idx_1] = sig[k + xoffset];
            }
        }
        b_a.set_size(441, b_y.size(1));
        csz_idx_1 = 441 * b_y.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            b_a[xoffset] = b_y[xoffset];
        }
        csz_idx_1 = b_y.size(1);
        b_y.set_size(441, csz_idx_1);
        if (csz_idx_1 != 0) {
            acoef = (b_a.size(1) != 1);
            xoffset = csz_idx_1 - 1;
            for (b_k = 0; b_k <= xoffset; b_k++) {
                csz_idx_1 = acoef * b_k;
                for (k = 0; k < 441; k++) {
                    b_y[k + 441 * b_k] = b_a[k + 441 * csz_idx_1] * dv2[k];
                }
            }
        }
        coder::c_fft(b_y, Yb);
        csz_idx_1 = Yb.size(1);
        Y.set_size(221, Yb.size(1));
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            for (k = 0; k < 221; k++) {
                double Y_im;
                double Y_re;
                x = Yb[k + 441 * xoffset].re;
                Y_im = -Yb[k + 441 * xoffset].im;
                Y_re = Yb[k + 441 * xoffset].re * x -
                       Yb[k + 441 * xoffset].im * Y_im;
                Y_im = Yb[k + 441 * xoffset].re * Y_im +
                       Yb[k + 441 * xoffset].im * x;
                if (Y_im == 0.0) {
                    Y[k + 221 * xoffset].re = Y_re / 24420.5;
                    Y[k + 221 * xoffset].im = 0.0;
                } else if (Y_re == 0.0) {
                    Y[k + 221 * xoffset].re = 0.0;
                    Y[k + 221 * xoffset].im = Y_im / 24420.5;
                } else {
                    Y[k + 221 * xoffset].re = Y_re / 24420.5;
                    Y[k + 221 * xoffset].im = Y_im / 24420.5;
                }
            }
        }
        csz_idx_1 = Y.size(1) - 1;
        r.set_size(1, Y.size(1));
        for (xoffset = 0; xoffset <= csz_idx_1; xoffset++) {
            r[xoffset].re = 0.5 * Y[221 * xoffset].re;
            r[xoffset].im = 0.5 * Y[221 * xoffset].im;
        }
        csz_idx_1 = r.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            Y[221 * xoffset] = r[xoffset];
        }
        X.set_size(221, Y.size(1));
        csz_idx_1 = 221 * Y.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            X[xoffset] = Y[xoffset].re;
        }
        if (X.size(1) == 0) {
            e.set_size(1, 0);
        } else {
            csz_idx_1 = X.size(1);
            e.set_size(1, X.size(1));
            for (k = 0; k < csz_idx_1; k++) {
                acoef = k * 221;
                x = X[acoef];
                for (b_k = 0; b_k < 220; b_k++) {
                    x += X[(acoef + b_k) + 1];
                }
                e[k] = x;
            }
        }
        y.set_size(221, e.size(1));
        csz_idx_1 = e.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            acoef = xoffset * 221;
            for (k = 0; k < 221; k++) {
                y[acoef + k] = e[xoffset];
            }
        }
        csz_idx_1 = 221 * X.size(1);
        X.set_size(221, X.size(1));
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            X[xoffset] = X[xoffset] / y[xoffset];
        }
        csz_idx_1 = 221 * X.size(1);
        a.set_size(221, X.size(1));
        for (b_k = 0; b_k < csz_idx_1; b_k++) {
            a[b_k] = coder::internal::scalar::b_log2(X[b_k]);
        }
        csz_idx_1 = 221 * X.size(1);
        X.set_size(221, X.size(1));
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            X[xoffset] = X[xoffset] * a[xoffset];
        }
        if (X.size(1) == 0) {
            e.set_size(e.size(0), 0);
        } else {
            csz_idx_1 = X.size(1);
            e.set_size(1, X.size(1));
            for (k = 0; k < csz_idx_1; k++) {
                acoef = k * 221;
                if (rtIsNaN(X[acoef])) {
                    e[k] = 0.0;
                } else {
                    e[k] = X[acoef];
                }
                for (b_k = 0; b_k < 220; b_k++) {
                    xoffset = (acoef + b_k) + 1;
                    if (!rtIsNaN(X[xoffset])) {
                        e[k] = e[k] + X[xoffset];
                    }
                }
            }
        }
        e.set_size(1, e.size(1));
        csz_idx_1 = e.size(1) - 1;
        for (xoffset = 0; xoffset <= csz_idx_1; xoffset++) {
            e[xoffset] = -e[xoffset] / 7.7879025593914317;
        }
        SE.set_size(e.size(1), 1);
        csz_idx_1 = e.size(1);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            SE[xoffset] = e[xoffset];
        }
    } break;
    case 24000:
        coder::b_spectralEntropy(sig, b_SE);
        SE.set_size(b_SE.size(0), 1);
        csz_idx_1 = b_SE.size(0);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            SE[xoffset] = b_SE[xoffset];
        }
        break;
    case 44100:
        coder::c_spectralEntropy(sig, b_SE);
        SE.set_size(b_SE.size(0), 1);
        csz_idx_1 = b_SE.size(0);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            SE[xoffset] = b_SE[xoffset];
        }
        break;
    case 48000:
        coder::d_spectralEntropy(sig, b_SE);
        SE.set_size(b_SE.size(0), 1);
        csz_idx_1 = b_SE.size(0);
        for (xoffset = 0; xoffset < csz_idx_1; xoffset++) {
            SE[xoffset] = b_SE[xoffset];
        }
        break;
    }
    csz_idx_1 = SE.size(0) * SE.size(1);
    b_SE = SE.reshape(csz_idx_1);
    *SE_mean = coder::blockedSummation(b_SE, SE.size(0) * SE.size(1)) /
               static_cast<double>(SE.size(0) * SE.size(1));
    csz_idx_1 = SE.size(0) * SE.size(1);
    b_SE = SE.reshape(csz_idx_1);
    *SE_max = coder::internal::maximum(b_SE);
    csz_idx_1 = SE.size(0) * SE.size(1);
    b_SE = SE.reshape(csz_idx_1);
    *SE_min = coder::internal::minimum(b_SE);
    csz_idx_1 = SE.size(0) * SE.size(1);
    b_SE = SE.reshape(csz_idx_1);
    *SE_var = coder::vvarstd(b_SE, SE.size(0) * SE.size(1));
}
